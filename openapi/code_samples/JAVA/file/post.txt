import io.swagger.client.*;
import io.swagger.client.auth.*;
import io.swagger.client.model.*;
import io.swagger.client.api.AnalysisApi;

import java.io.File;
import java.util.*;

public class AnalysisApiExample {

    public static void main(String[] args) {
        
        AnalysisApi apiInstance = new AnalysisApi();
        Object body = ; // Object | 
        String filename = filename_example; // String | The name of the submitted file
        String filepath = filepath_example; // String | if local file scan is enabled the path to the file (see Security rule configuration)
        String workflow = workflow_example; // String | name of the selected workflow (deprecated, use "rule" header parameter instead)
        String archivepwd = archivepwd_example; // String | password for archive ( URL encoded UTF-8 string)
  Multiple passwords is also supported, format: archivepwd
    * X: Could be empty
    * When having value, X must be a number >= 1
  For example:
    archivepwd1: "fox"
    archivepwd2: "cow"
    archivepwd3: "bear"

        String metadata = metadata_example; // String | could be utilized for:
Additional parameter for pre-defined post actions and external scanners (as a part of STDIN input).
Customized macro variable for watermarking text (Proactive DLP engine feature).
Additional context / verbose information for each file submission (appended into JSON response scan result).

        String callbackurl = callbackurl_example; // String | Client's URL where MetaDefender Core will notify scan result back to whenever scan is finished (webhooks model). See details at 8.1.11.1. Individual file processing
Format: :
Example: http://10.0.1.100:8081/listenback

        try {
            inline_response_200 result = apiInstance.filePost(body, filename, filepath, workflow, archivepwd, metadata, callbackurl);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling AnalysisApi#filePost");
            e.printStackTrace();
        }
    }
}
