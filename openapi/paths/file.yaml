post:
  tags:
    - analysis
  summary: Analyze File
  description: >-
    ## Scanning a file using a specified workflow.

    Scan is done asynchronously and each scan request is tracked by data id of
    which result can be retrieved by API Fetch Scan Result.

    > _**Note**_: Chunked transfer encoding (applying header Transfer-Encoding:
    Chunked) is **not supported** on `/file` API.
  operationId: fileAnalysisPost
  parameters:
    - $ref: ../components/parameters/apikey.yaml
    - name: filename
      description: The name of the submitted file
      in: header
      required: false
      schema:
        type: string
    - name: filepath
      description: >-
        if local file scan is enabled the path to the file (see Security rule
        configuration)
      in: header
      required: false
      schema:
        type: string
    - $ref: ../components/parameters/useragent.yaml
    - $ref: ../components/parameters/rule.yaml
    - name: workflow
      description: >-
        name of the selected workflow (deprecated, use "rule" header parameter
        instead)
      in: header
      required: false
      schema:
        type: string
    - name: batch
      description: >-
        Batch id to scan with, coming from `Initiate Batch` (If it is not given,
        it will be a single file scan.)
      in: header
      required: false
      schema:
        type: string
    - name: archivepwd
      description: |
        password for archive ( URL encoded UTF-8 string)
          Multiple passwords is also supported, format: archivepwd<X>
            * X: Could be empty
            * When having value, X must be a number >= 1
          For example:
            archivepwd1: "fox"
            archivepwd2: "cow"
            archivepwd3: "bear"
      in: header
      required: false
      schema:
        type: string
    - name: metadata
      description: >
        could be utilized for:

        Additional parameter for pre-defined post actions and external scanners
        (as a part of STDIN input).

        Customized macro variable for watermarking text (Proactive DLP engine
        feature).

        Additional context / verbose information for each file submission
        (appended into JSON response scan result).
      in: header
      required: false
      schema:
        type: string
    - name: callbackurl
      in: header
      required: false
      description: >
        Client's URL where MetaDefender Core will notify scan result back to
        whenever scan is finished (webhooks model). See details at 8.1.11.1.
        Individual file processing
          * Format: <protocol://><ip | domain>:<port></path>
          * Example: http://10.0.1.100:8081/listenback
      schema:
        type: string
        format: uri
        example: 'http://10.0.1.100:8081/listenback'
  requestBody:
    $ref: ../components/requestBodies/uploadFile.yaml
  responses:
    '200':
      description: Successful file submission
      content:
        application/json:
          schema:
            type: object
            required:
              - data_id
            properties:
              data_id:
                type: string
          example:
            data_id: 61dffeaa728844adbf49eb090e4ece0e
    '400':
      description: Callbackurl and/or apikey is invalid.
      content:
        application/json:
          schema:
            type: object
            properties:
              err:
                type: string
          example:
            err: Callback url is invalid.
    '403':
      $ref: ../components/responses/Error403.yaml
    '411':
      description: Content-Length header is missing from the request.
      content:
        application/json:
          schema:
            type: object
            properties:
              err:
                type: string
          example:
            err: Missing Content-Length header.
    '422':
      description: Body input is empty.
      content:
        application/json:
          schema:
            type: object
            properties:
              err:
                type: string
          example:
            err: File is empty.
    '500':
      $ref: ../components/responses/Error500.yaml
    '503':
      description: 'Server is too busy, scan queue is full. Try again later.'
      content:
        application/json:
          schema:
            type: object
            properties:
              err:
                type: string
          example:
            err: Server is too busy. Try again later.
  callbacks:
    onFinish:
      '{$request.header.callbackurl}':
        post:
          operationId: onFinishCallback
          summary: File Analysis callback
          description: >
            Needs to be a `PUT` request and in the body of the file will be the
            entire [Analysis Result](#operation/AnalysisResult) when data is
            sent, it will be sent to the `callbackUrl` provided               
          requestBody:
            description: Analysis Result
            content:
              application/json:
                schema:
                  $ref: ../components/schemas/AnalysisResult.yaml
          responses:
            '200':
              description: |
                Analysis was successfully submitted
            '400':
              description: |
                Callback url is invalid                
  x-code-samples:
    - lang: CURL
      source:
        $ref: ../code_samples/CURL/file/post.sh
    - lang: JAVA
      source:
        $ref: ../code_samples/JAVA/file/post.txt
    - lang: PYTHON
      source:
        $ref: ../code_samples/PYTHON/file/post.py
