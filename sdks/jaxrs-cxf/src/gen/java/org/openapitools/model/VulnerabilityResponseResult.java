package org.openapitools.model;

import io.swagger.annotations.ApiModel;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.VulnerabilityResponseResultDetectedProduct;
import org.openapitools.model.VulnerabilityResponseResultVulnerabilites;
import javax.validation.constraints.*;
import javax.validation.Valid;

import io.swagger.annotations.ApiModelProperty;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
  * The result information provided by the OESIS Framework
 **/
@ApiModel(description="The result information provided by the OESIS Framework")
public class VulnerabilityResponseResult  {
  
  @ApiModelProperty(example = "0", value = "The result code for vulnerability check, 0 means a successful check")
 /**
   * The result code for vulnerability check, 0 means a successful check
  **/
  private Integer code;

  @ApiModelProperty(example = "B428501D1FAD1BA14AA2FC3F9B5F051EC8721EA2", value = "The file's SHA1 hash value")
 /**
   * The file's SHA1 hash value
  **/
  private String hash;

@XmlType(name="MethodEnum")
@XmlEnum(Integer.class)
public enum MethodEnum {

@XmlEnumValue("50700") NUMBER_50700(Integer.valueOf(50700));


    private Integer value;

    MethodEnum (Integer v) {
        value = v;
    }

    public Integer value() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static MethodEnum fromValue(Integer value) {
        for (MethodEnum b : MethodEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}

  @ApiModelProperty(example = "50700", value = "The method used by OESIS Framework, it should be 50700 every time.")
 /**
   * The method used by OESIS Framework, it should be 50700 every time.
  **/
  private MethodEnum method;

  @ApiModelProperty(example = "1493020752", value = "Timestamp of the request issued")
 /**
   * Timestamp of the request issued
  **/
  private String timestamp;

  @ApiModelProperty(example = "48", value = "The vulnerability check's duration in milliseconds")
 /**
   * The vulnerability check's duration in milliseconds
  **/
  private Integer timing;

  @ApiModelProperty(value = "")
  @Valid
  private VulnerabilityResponseResultDetectedProduct detectedProduct;

  @ApiModelProperty(value = "A list of specific vulnerabilities")
  @Valid
 /**
   * A list of specific vulnerabilities
  **/
  private List<VulnerabilityResponseResultVulnerabilites> vulnerabilites = null;
 /**
   * The result code for vulnerability check, 0 means a successful check
   * @return code
  **/
  @JsonProperty("code")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public VulnerabilityResponseResult code(Integer code) {
    this.code = code;
    return this;
  }

 /**
   * The file&#39;s SHA1 hash value
   * @return hash
  **/
  @JsonProperty("hash")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public VulnerabilityResponseResult hash(String hash) {
    this.hash = hash;
    return this;
  }

 /**
   * The method used by OESIS Framework, it should be 50700 every time.
   * @return method
  **/
  @JsonProperty("method")
  public Integer getMethod() {
    if (method == null) {
      return null;
    }
    return method.value();
  }

  public void setMethod(MethodEnum method) {
    this.method = method;
  }

  public VulnerabilityResponseResult method(MethodEnum method) {
    this.method = method;
    return this;
  }

 /**
   * Timestamp of the request issued
   * @return timestamp
  **/
  @JsonProperty("timestamp")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public VulnerabilityResponseResult timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

 /**
   * The vulnerability check&#39;s duration in milliseconds
   * @return timing
  **/
  @JsonProperty("timing")
  public Integer getTiming() {
    return timing;
  }

  public void setTiming(Integer timing) {
    this.timing = timing;
  }

  public VulnerabilityResponseResult timing(Integer timing) {
    this.timing = timing;
    return this;
  }

 /**
   * Get detectedProduct
   * @return detectedProduct
  **/
  @JsonProperty("detected_product")
  public VulnerabilityResponseResultDetectedProduct getDetectedProduct() {
    return detectedProduct;
  }

  public void setDetectedProduct(VulnerabilityResponseResultDetectedProduct detectedProduct) {
    this.detectedProduct = detectedProduct;
  }

  public VulnerabilityResponseResult detectedProduct(VulnerabilityResponseResultDetectedProduct detectedProduct) {
    this.detectedProduct = detectedProduct;
    return this;
  }

 /**
   * A list of specific vulnerabilities
   * @return vulnerabilites
  **/
  @JsonProperty("vulnerabilites")
  public List<VulnerabilityResponseResultVulnerabilites> getVulnerabilites() {
    return vulnerabilites;
  }

  public void setVulnerabilites(List<VulnerabilityResponseResultVulnerabilites> vulnerabilites) {
    this.vulnerabilites = vulnerabilites;
  }

  public VulnerabilityResponseResult vulnerabilites(List<VulnerabilityResponseResultVulnerabilites> vulnerabilites) {
    this.vulnerabilites = vulnerabilites;
    return this;
  }

  public VulnerabilityResponseResult addVulnerabilitesItem(VulnerabilityResponseResultVulnerabilites vulnerabilitesItem) {
    this.vulnerabilites.add(vulnerabilitesItem);
    return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResult {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    timing: ").append(toIndentedString(timing)).append("\n");
    sb.append("    detectedProduct: ").append(toIndentedString(detectedProduct)).append("\n");
    sb.append("    vulnerabilites: ").append(toIndentedString(vulnerabilites)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

