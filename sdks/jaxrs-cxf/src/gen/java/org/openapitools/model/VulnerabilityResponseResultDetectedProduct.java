package org.openapitools.model;

import io.swagger.annotations.ApiModel;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductProduct;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductVendor;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductVersionData;
import javax.validation.constraints.*;
import javax.validation.Valid;

import io.swagger.annotations.ApiModelProperty;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
  * Detected products object is present if input hash has been found to correspond to verified product
 **/
@ApiModel(description="Detected products object is present if input hash has been found to correspond to verified product")
public class VulnerabilityResponseResultDetectedProduct  {
  
  @ApiModelProperty(example = "true", value = "Indicates whether any vulnerabilities have been associated with the particular product")
 /**
   * Indicates whether any vulnerabilities have been associated with the particular product
  **/
  private Boolean hasVulnerability;

  @ApiModelProperty(example = "false", value = "True if this product's patch level is current, defaults to true")
 /**
   * True if this product's patch level is current, defaults to true
  **/
  private Boolean isCurrent;

  @ApiModelProperty(value = "")
  @Valid
  private VulnerabilityResponseResultDetectedProductProduct product;

  @ApiModelProperty(example = "http://get.adobe.com/flashplayer/", value = "A link where product updates or patches can be obtained")
 /**
   * A link where product updates or patches can be obtained
  **/
  private String remediationLink;

@XmlType(name="SeverityEnum")
@XmlEnum(String.class)
public enum SeverityEnum {

@XmlEnumValue("low") LOW(String.valueOf("low")), @XmlEnumValue("moderate") MODERATE(String.valueOf("moderate")), @XmlEnumValue("important") IMPORTANT(String.valueOf("important")), @XmlEnumValue("critical") CRITICAL(String.valueOf("critical")), @XmlEnumValue("not_available") NOT_AVAILABLE(String.valueOf("not_available")), @XmlEnumValue("unknown") UNKNOWN(String.valueOf("unknown"));


    private String value;

    SeverityEnum (String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String value) {
        for (SeverityEnum b : SeverityEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}

  @ApiModelProperty(example = "critical", value = "String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` ")
 /**
   * String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` 
  **/
  private SeverityEnum severity;

  @ApiModelProperty(example = "Adobe Flash Player", value = "Product signature descriptor")
 /**
   * Product signature descriptor
  **/
  private String sigName;

  @ApiModelProperty(example = "107", value = "OPSWAT signature id")
 /**
   * OPSWAT signature id
  **/
  private Integer signature;

  @ApiModelProperty(value = "")
  @Valid
  private VulnerabilityResponseResultDetectedProductVendor vendor;

  @ApiModelProperty(example = "20.0.0.235", value = "The installed product version")
 /**
   * The installed product version
  **/
  private String version;

  @ApiModelProperty(value = "")
  @Valid
  private VulnerabilityResponseResultDetectedProductVersionData versionData;
 /**
   * Indicates whether any vulnerabilities have been associated with the particular product
   * @return hasVulnerability
  **/
  @JsonProperty("has_vulnerability")
  public Boolean getHasVulnerability() {
    return hasVulnerability;
  }

  public void setHasVulnerability(Boolean hasVulnerability) {
    this.hasVulnerability = hasVulnerability;
  }

  public VulnerabilityResponseResultDetectedProduct hasVulnerability(Boolean hasVulnerability) {
    this.hasVulnerability = hasVulnerability;
    return this;
  }

 /**
   * True if this product&#39;s patch level is current, defaults to true
   * @return isCurrent
  **/
  @JsonProperty("is_current")
  public Boolean getIsCurrent() {
    return isCurrent;
  }

  public void setIsCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
  }

  public VulnerabilityResponseResultDetectedProduct isCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
    return this;
  }

 /**
   * Get product
   * @return product
  **/
  @JsonProperty("product")
  public VulnerabilityResponseResultDetectedProductProduct getProduct() {
    return product;
  }

  public void setProduct(VulnerabilityResponseResultDetectedProductProduct product) {
    this.product = product;
  }

  public VulnerabilityResponseResultDetectedProduct product(VulnerabilityResponseResultDetectedProductProduct product) {
    this.product = product;
    return this;
  }

 /**
   * A link where product updates or patches can be obtained
   * @return remediationLink
  **/
  @JsonProperty("remediation_link")
  public String getRemediationLink() {
    return remediationLink;
  }

  public void setRemediationLink(String remediationLink) {
    this.remediationLink = remediationLink;
  }

  public VulnerabilityResponseResultDetectedProduct remediationLink(String remediationLink) {
    this.remediationLink = remediationLink;
    return this;
  }

 /**
   * String description of Severity level:    * &#x60;low&#x60;    * &#x60;moderate&#x60;   * &#x60;important&#x60;   * &#x60;critical&#x60;   * &#x60;not_available&#x60;   * &#x60;unknown&#x60; 
   * @return severity
  **/
  @JsonProperty("severity")
  public String getSeverity() {
    if (severity == null) {
      return null;
    }
    return severity.value();
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  public VulnerabilityResponseResultDetectedProduct severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

 /**
   * Product signature descriptor
   * @return sigName
  **/
  @JsonProperty("sig_name")
  public String getSigName() {
    return sigName;
  }

  public void setSigName(String sigName) {
    this.sigName = sigName;
  }

  public VulnerabilityResponseResultDetectedProduct sigName(String sigName) {
    this.sigName = sigName;
    return this;
  }

 /**
   * OPSWAT signature id
   * @return signature
  **/
  @JsonProperty("signature")
  public Integer getSignature() {
    return signature;
  }

  public void setSignature(Integer signature) {
    this.signature = signature;
  }

  public VulnerabilityResponseResultDetectedProduct signature(Integer signature) {
    this.signature = signature;
    return this;
  }

 /**
   * Get vendor
   * @return vendor
  **/
  @JsonProperty("vendor")
  public VulnerabilityResponseResultDetectedProductVendor getVendor() {
    return vendor;
  }

  public void setVendor(VulnerabilityResponseResultDetectedProductVendor vendor) {
    this.vendor = vendor;
  }

  public VulnerabilityResponseResultDetectedProduct vendor(VulnerabilityResponseResultDetectedProductVendor vendor) {
    this.vendor = vendor;
    return this;
  }

 /**
   * The installed product version
   * @return version
  **/
  @JsonProperty("version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public VulnerabilityResponseResultDetectedProduct version(String version) {
    this.version = version;
    return this;
  }

 /**
   * Get versionData
   * @return versionData
  **/
  @JsonProperty("version_data")
  public VulnerabilityResponseResultDetectedProductVersionData getVersionData() {
    return versionData;
  }

  public void setVersionData(VulnerabilityResponseResultDetectedProductVersionData versionData) {
    this.versionData = versionData;
  }

  public VulnerabilityResponseResultDetectedProduct versionData(VulnerabilityResponseResultDetectedProductVersionData versionData) {
    this.versionData = versionData;
    return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResultDetectedProduct {\n");
    
    sb.append("    hasVulnerability: ").append(toIndentedString(hasVulnerability)).append("\n");
    sb.append("    isCurrent: ").append(toIndentedString(isCurrent)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    remediationLink: ").append(toIndentedString(remediationLink)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    sigName: ").append(toIndentedString(sigName)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionData: ").append(toIndentedString(versionData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

