package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;



/**
 * Object containing detailed patch information
 **/

@ApiModel(description = "Object containing detailed patch information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaInflectorServerCodegen", date = "2020-05-15T23:49:39.082677Z[UTC]")
public class VulnerabilityResponseResultDetectedProductVersionData   {
  @JsonProperty("count_behind")
  private Integer countBehind;

  @JsonProperty("feed_id")
  private Integer feedId;

  @JsonProperty("version")
  private String version;

  /**
   * The number of patches behind of the installed product
   **/
  public VulnerabilityResponseResultDetectedProductVersionData countBehind(Integer countBehind) {
    this.countBehind = countBehind;
    return this;
  }

  
  @ApiModelProperty(example = "65", value = "The number of patches behind of the installed product")
  @JsonProperty("count_behind")
  public Integer getCountBehind() {
    return countBehind;
  }
  public void setCountBehind(Integer countBehind) {
    this.countBehind = countBehind;
  }

  /**
   * The remote feed ID used to determine patch level
   **/
  public VulnerabilityResponseResultDetectedProductVersionData feedId(Integer feedId) {
    this.feedId = feedId;
    return this;
  }

  
  @ApiModelProperty(example = "200005", value = "The remote feed ID used to determine patch level")
  @JsonProperty("feed_id")
  public Integer getFeedId() {
    return feedId;
  }
  public void setFeedId(Integer feedId) {
    this.feedId = feedId;
  }

  /**
   * The current version of the product in the remote feed
   **/
  public VulnerabilityResponseResultDetectedProductVersionData version(String version) {
    this.version = version;
    return this;
  }

  
  @ApiModelProperty(example = "25.0.0.149", value = "The current version of the product in the remote feed")
  @JsonProperty("version")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityResponseResultDetectedProductVersionData vulnerabilityResponseResultDetectedProductVersionData = (VulnerabilityResponseResultDetectedProductVersionData) o;
    return Objects.equals(countBehind, vulnerabilityResponseResultDetectedProductVersionData.countBehind) &&
        Objects.equals(feedId, vulnerabilityResponseResultDetectedProductVersionData.feedId) &&
        Objects.equals(version, vulnerabilityResponseResultDetectedProductVersionData.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countBehind, feedId, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResultDetectedProductVersionData {\n");
    
    sb.append("    countBehind: ").append(toIndentedString(countBehind)).append("\n");
    sb.append("    feedId: ").append(toIndentedString(feedId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

