package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductProduct;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductVendor;
import org.openapitools.model.VulnerabilityResponseResultDetectedProductVersionData;



/**
 * Detected products object is present if input hash has been found to correspond to verified product
 **/

@ApiModel(description = "Detected products object is present if input hash has been found to correspond to verified product")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaInflectorServerCodegen", date = "2020-05-15T23:49:39.082677Z[UTC]")
public class VulnerabilityResponseResultDetectedProduct   {
  @JsonProperty("has_vulnerability")
  private Boolean hasVulnerability;

  @JsonProperty("is_current")
  private Boolean isCurrent;

  @JsonProperty("product")
  private VulnerabilityResponseResultDetectedProductProduct product;

  @JsonProperty("remediation_link")
  private String remediationLink;

  /**
   * String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` 
   */
  public enum SeverityEnum {
    LOW("low"),
    
    MODERATE("moderate"),
    
    IMPORTANT("important"),
    
    CRITICAL("critical"),
    
    NOT_AVAILABLE("not_available"),
    
    UNKNOWN("unknown");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("severity")
  private SeverityEnum severity;

  @JsonProperty("sig_name")
  private String sigName;

  @JsonProperty("signature")
  private Integer signature;

  @JsonProperty("vendor")
  private VulnerabilityResponseResultDetectedProductVendor vendor;

  @JsonProperty("version")
  private String version;

  @JsonProperty("version_data")
  private VulnerabilityResponseResultDetectedProductVersionData versionData;

  /**
   * Indicates whether any vulnerabilities have been associated with the particular product
   **/
  public VulnerabilityResponseResultDetectedProduct hasVulnerability(Boolean hasVulnerability) {
    this.hasVulnerability = hasVulnerability;
    return this;
  }

  
  @ApiModelProperty(example = "true", value = "Indicates whether any vulnerabilities have been associated with the particular product")
  @JsonProperty("has_vulnerability")
  public Boolean getHasVulnerability() {
    return hasVulnerability;
  }
  public void setHasVulnerability(Boolean hasVulnerability) {
    this.hasVulnerability = hasVulnerability;
  }

  /**
   * True if this product's patch level is current, defaults to true
   **/
  public VulnerabilityResponseResultDetectedProduct isCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
    return this;
  }

  
  @ApiModelProperty(example = "false", value = "True if this product's patch level is current, defaults to true")
  @JsonProperty("is_current")
  public Boolean getIsCurrent() {
    return isCurrent;
  }
  public void setIsCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
  }

  /**
   **/
  public VulnerabilityResponseResultDetectedProduct product(VulnerabilityResponseResultDetectedProductProduct product) {
    this.product = product;
    return this;
  }

  
  @ApiModelProperty(value = "")
  @JsonProperty("product")
  public VulnerabilityResponseResultDetectedProductProduct getProduct() {
    return product;
  }
  public void setProduct(VulnerabilityResponseResultDetectedProductProduct product) {
    this.product = product;
  }

  /**
   * A link where product updates or patches can be obtained
   **/
  public VulnerabilityResponseResultDetectedProduct remediationLink(String remediationLink) {
    this.remediationLink = remediationLink;
    return this;
  }

  
  @ApiModelProperty(example = "http://get.adobe.com/flashplayer/", value = "A link where product updates or patches can be obtained")
  @JsonProperty("remediation_link")
  public String getRemediationLink() {
    return remediationLink;
  }
  public void setRemediationLink(String remediationLink) {
    this.remediationLink = remediationLink;
  }

  /**
   * String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` 
   **/
  public VulnerabilityResponseResultDetectedProduct severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

  
  @ApiModelProperty(example = "critical", value = "String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` ")
  @JsonProperty("severity")
  public SeverityEnum getSeverity() {
    return severity;
  }
  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  /**
   * Product signature descriptor
   **/
  public VulnerabilityResponseResultDetectedProduct sigName(String sigName) {
    this.sigName = sigName;
    return this;
  }

  
  @ApiModelProperty(example = "Adobe Flash Player", value = "Product signature descriptor")
  @JsonProperty("sig_name")
  public String getSigName() {
    return sigName;
  }
  public void setSigName(String sigName) {
    this.sigName = sigName;
  }

  /**
   * OPSWAT signature id
   **/
  public VulnerabilityResponseResultDetectedProduct signature(Integer signature) {
    this.signature = signature;
    return this;
  }

  
  @ApiModelProperty(example = "107", value = "OPSWAT signature id")
  @JsonProperty("signature")
  public Integer getSignature() {
    return signature;
  }
  public void setSignature(Integer signature) {
    this.signature = signature;
  }

  /**
   **/
  public VulnerabilityResponseResultDetectedProduct vendor(VulnerabilityResponseResultDetectedProductVendor vendor) {
    this.vendor = vendor;
    return this;
  }

  
  @ApiModelProperty(value = "")
  @JsonProperty("vendor")
  public VulnerabilityResponseResultDetectedProductVendor getVendor() {
    return vendor;
  }
  public void setVendor(VulnerabilityResponseResultDetectedProductVendor vendor) {
    this.vendor = vendor;
  }

  /**
   * The installed product version
   **/
  public VulnerabilityResponseResultDetectedProduct version(String version) {
    this.version = version;
    return this;
  }

  
  @ApiModelProperty(example = "20.0.0.235", value = "The installed product version")
  @JsonProperty("version")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }

  /**
   **/
  public VulnerabilityResponseResultDetectedProduct versionData(VulnerabilityResponseResultDetectedProductVersionData versionData) {
    this.versionData = versionData;
    return this;
  }

  
  @ApiModelProperty(value = "")
  @JsonProperty("version_data")
  public VulnerabilityResponseResultDetectedProductVersionData getVersionData() {
    return versionData;
  }
  public void setVersionData(VulnerabilityResponseResultDetectedProductVersionData versionData) {
    this.versionData = versionData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityResponseResultDetectedProduct vulnerabilityResponseResultDetectedProduct = (VulnerabilityResponseResultDetectedProduct) o;
    return Objects.equals(hasVulnerability, vulnerabilityResponseResultDetectedProduct.hasVulnerability) &&
        Objects.equals(isCurrent, vulnerabilityResponseResultDetectedProduct.isCurrent) &&
        Objects.equals(product, vulnerabilityResponseResultDetectedProduct.product) &&
        Objects.equals(remediationLink, vulnerabilityResponseResultDetectedProduct.remediationLink) &&
        Objects.equals(severity, vulnerabilityResponseResultDetectedProduct.severity) &&
        Objects.equals(sigName, vulnerabilityResponseResultDetectedProduct.sigName) &&
        Objects.equals(signature, vulnerabilityResponseResultDetectedProduct.signature) &&
        Objects.equals(vendor, vulnerabilityResponseResultDetectedProduct.vendor) &&
        Objects.equals(version, vulnerabilityResponseResultDetectedProduct.version) &&
        Objects.equals(versionData, vulnerabilityResponseResultDetectedProduct.versionData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasVulnerability, isCurrent, product, remediationLink, severity, sigName, signature, vendor, version, versionData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResultDetectedProduct {\n");
    
    sb.append("    hasVulnerability: ").append(toIndentedString(hasVulnerability)).append("\n");
    sb.append("    isCurrent: ").append(toIndentedString(isCurrent)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    remediationLink: ").append(toIndentedString(remediationLink)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    sigName: ").append(toIndentedString(sigName)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionData: ").append(toIndentedString(versionData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

