package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.VulnerabilityResponseResultDetailsCvss;



/**
 * A set of optional vulnerability details
 **/

@ApiModel(description = "A set of optional vulnerability details")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaInflectorServerCodegen", date = "2020-05-15T23:49:39.082677Z[UTC]")
public class VulnerabilityResponseResultDetails   {
  @JsonProperty("cpe")
  private String cpe;

  @JsonProperty("cve")
  private String cve;

  @JsonProperty("cvss")
  private VulnerabilityResponseResultDetailsCvss cvss;

  @JsonProperty("cwe")
  private String cwe;

  @JsonProperty("last_modified_epoch")
  private String lastModifiedEpoch;

  @JsonProperty("published-epoch")
  private String publishedEpoch;

  @JsonProperty("references")
  private List<String> references = null;

  /**
   * A CPE product reference
   **/
  public VulnerabilityResponseResultDetails cpe(String cpe) {
    this.cpe = cpe;
    return this;
  }

  
  @ApiModelProperty(example = "cpe:/a:adobe:flash player", value = "A CPE product reference")
  @JsonProperty("cpe")
  public String getCpe() {
    return cpe;
  }
  public void setCpe(String cpe) {
    this.cpe = cpe;
  }

  /**
   * A CVE identification string
   **/
  public VulnerabilityResponseResultDetails cve(String cve) {
    this.cve = cve;
    return this;
  }

  
  @ApiModelProperty(example = "CVE-2015-8459", value = "A CVE identification string")
  @JsonProperty("cve")
  public String getCve() {
    return cve;
  }
  public void setCve(String cve) {
    this.cve = cve;
  }

  /**
   **/
  public VulnerabilityResponseResultDetails cvss(VulnerabilityResponseResultDetailsCvss cvss) {
    this.cvss = cvss;
    return this;
  }

  
  @ApiModelProperty(value = "")
  @JsonProperty("cvss")
  public VulnerabilityResponseResultDetailsCvss getCvss() {
    return cvss;
  }
  public void setCvss(VulnerabilityResponseResultDetailsCvss cvss) {
    this.cvss = cvss;
  }

  /**
   * A CWE group identification string
   **/
  public VulnerabilityResponseResultDetails cwe(String cwe) {
    this.cwe = cwe;
    return this;
  }

  
  @ApiModelProperty(example = "CWE-119", value = "A CWE group identification string")
  @JsonProperty("cwe")
  public String getCwe() {
    return cwe;
  }
  public void setCwe(String cwe) {
    this.cwe = cwe;
  }

  /**
   * An epoch timestamp indicating source last update time
   **/
  public VulnerabilityResponseResultDetails lastModifiedEpoch(String lastModifiedEpoch) {
    this.lastModifiedEpoch = lastModifiedEpoch;
    return this;
  }

  
  @ApiModelProperty(example = "1487300348", value = "An epoch timestamp indicating source last update time")
  @JsonProperty("last_modified_epoch")
  public String getLastModifiedEpoch() {
    return lastModifiedEpoch;
  }
  public void setLastModifiedEpoch(String lastModifiedEpoch) {
    this.lastModifiedEpoch = lastModifiedEpoch;
  }

  /**
   * An epoch timestamp indicating source publishing time
   **/
  public VulnerabilityResponseResultDetails publishedEpoch(String publishedEpoch) {
    this.publishedEpoch = publishedEpoch;
    return this;
  }

  
  @ApiModelProperty(example = "1451347140", value = "An epoch timestamp indicating source publishing time")
  @JsonProperty("published-epoch")
  public String getPublishedEpoch() {
    return publishedEpoch;
  }
  public void setPublishedEpoch(String publishedEpoch) {
    this.publishedEpoch = publishedEpoch;
  }

  /**
   * An array of external reference links
   **/
  public VulnerabilityResponseResultDetails references(List<String> references) {
    this.references = references;
    return this;
  }

  
  @ApiModelProperty(value = "An array of external reference links")
  @JsonProperty("references")
  public List<String> getReferences() {
    return references;
  }
  public void setReferences(List<String> references) {
    this.references = references;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityResponseResultDetails vulnerabilityResponseResultDetails = (VulnerabilityResponseResultDetails) o;
    return Objects.equals(cpe, vulnerabilityResponseResultDetails.cpe) &&
        Objects.equals(cve, vulnerabilityResponseResultDetails.cve) &&
        Objects.equals(cvss, vulnerabilityResponseResultDetails.cvss) &&
        Objects.equals(cwe, vulnerabilityResponseResultDetails.cwe) &&
        Objects.equals(lastModifiedEpoch, vulnerabilityResponseResultDetails.lastModifiedEpoch) &&
        Objects.equals(publishedEpoch, vulnerabilityResponseResultDetails.publishedEpoch) &&
        Objects.equals(references, vulnerabilityResponseResultDetails.references);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpe, cve, cvss, cwe, lastModifiedEpoch, publishedEpoch, references);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResultDetails {\n");
    
    sb.append("    cpe: ").append(toIndentedString(cpe)).append("\n");
    sb.append("    cve: ").append(toIndentedString(cve)).append("\n");
    sb.append("    cvss: ").append(toIndentedString(cvss)).append("\n");
    sb.append("    cwe: ").append(toIndentedString(cwe)).append("\n");
    sb.append("    lastModifiedEpoch: ").append(toIndentedString(lastModifiedEpoch)).append("\n");
    sb.append("    publishedEpoch: ").append(toIndentedString(publishedEpoch)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

