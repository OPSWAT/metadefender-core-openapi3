/**
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VulnerabilityResponseResultDetectedProductProduct from './VulnerabilityResponseResultDetectedProductProduct';
import VulnerabilityResponseResultDetectedProductVendor from './VulnerabilityResponseResultDetectedProductVendor';
import VulnerabilityResponseResultDetectedProductVersionData from './VulnerabilityResponseResultDetectedProductVersionData';

/**
 * The VulnerabilityResponseResultDetectedProduct model module.
 * @module model/VulnerabilityResponseResultDetectedProduct
 * @version v4.18.0
 */
class VulnerabilityResponseResultDetectedProduct {
    /**
     * Constructs a new <code>VulnerabilityResponseResultDetectedProduct</code>.
     * Detected products object is present if input hash has been found to correspond to verified product
     * @alias module:model/VulnerabilityResponseResultDetectedProduct
     */
    constructor() { 
        
        VulnerabilityResponseResultDetectedProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerabilityResponseResultDetectedProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerabilityResponseResultDetectedProduct} obj Optional instance to populate.
     * @return {module:model/VulnerabilityResponseResultDetectedProduct} The populated <code>VulnerabilityResponseResultDetectedProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerabilityResponseResultDetectedProduct();

            if (data.hasOwnProperty('has_vulnerability')) {
                obj['has_vulnerability'] = ApiClient.convertToType(data['has_vulnerability'], 'Boolean');
            }
            if (data.hasOwnProperty('is_current')) {
                obj['is_current'] = ApiClient.convertToType(data['is_current'], 'Boolean');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = VulnerabilityResponseResultDetectedProductProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('remediation_link')) {
                obj['remediation_link'] = ApiClient.convertToType(data['remediation_link'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('sig_name')) {
                obj['sig_name'] = ApiClient.convertToType(data['sig_name'], 'String');
            }
            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'Number');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = VulnerabilityResponseResultDetectedProductVendor.constructFromObject(data['vendor']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('version_data')) {
                obj['version_data'] = VulnerabilityResponseResultDetectedProductVersionData.constructFromObject(data['version_data']);
            }
        }
        return obj;
    }


}

/**
 * Indicates whether any vulnerabilities have been associated with the particular product
 * @member {Boolean} has_vulnerability
 */
VulnerabilityResponseResultDetectedProduct.prototype['has_vulnerability'] = undefined;

/**
 * True if this product's patch level is current, defaults to true
 * @member {Boolean} is_current
 */
VulnerabilityResponseResultDetectedProduct.prototype['is_current'] = undefined;

/**
 * @member {module:model/VulnerabilityResponseResultDetectedProductProduct} product
 */
VulnerabilityResponseResultDetectedProduct.prototype['product'] = undefined;

/**
 * A link where product updates or patches can be obtained
 * @member {String} remediation_link
 */
VulnerabilityResponseResultDetectedProduct.prototype['remediation_link'] = undefined;

/**
 * String description of Severity level:    * `low`    * `moderate`   * `important`   * `critical`   * `not_available`   * `unknown` 
 * @member {module:model/VulnerabilityResponseResultDetectedProduct.SeverityEnum} severity
 */
VulnerabilityResponseResultDetectedProduct.prototype['severity'] = undefined;

/**
 * Product signature descriptor
 * @member {String} sig_name
 */
VulnerabilityResponseResultDetectedProduct.prototype['sig_name'] = undefined;

/**
 * OPSWAT signature id
 * @member {Number} signature
 */
VulnerabilityResponseResultDetectedProduct.prototype['signature'] = undefined;

/**
 * @member {module:model/VulnerabilityResponseResultDetectedProductVendor} vendor
 */
VulnerabilityResponseResultDetectedProduct.prototype['vendor'] = undefined;

/**
 * The installed product version
 * @member {String} version
 */
VulnerabilityResponseResultDetectedProduct.prototype['version'] = undefined;

/**
 * @member {module:model/VulnerabilityResponseResultDetectedProductVersionData} version_data
 */
VulnerabilityResponseResultDetectedProduct.prototype['version_data'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
VulnerabilityResponseResultDetectedProduct['SeverityEnum'] = {

    /**
     * value: "low"
     * @const
     */
    "low": "low",

    /**
     * value: "moderate"
     * @const
     */
    "moderate": "moderate",

    /**
     * value: "important"
     * @const
     */
    "important": "important",

    /**
     * value: "critical"
     * @const
     */
    "critical": "critical",

    /**
     * value: "not_available"
     * @const
     */
    "not_available": "not_available",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"
};



export default VulnerabilityResponseResultDetectedProduct;

