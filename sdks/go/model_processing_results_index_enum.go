/*
 * MetaDefender Core
 *
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * API version: v4.18.0
 * Contact: feedback@opswat.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// ProcessingResultsIndexEnum Possible overall and per engine analysis results:   | scan_result_i | scan_result_a                |   |---------------|------------------------------|   | 0             | No Threat Detected           |   | 1             | Infected                     |   | 2             | Suspicious                   |   | 3             | Failed                       |   | 4             | Cleaned / Deleted            |   | 7             | Scan Skipped - Whitelisted   |   | 8             | Scan Skipped - Blacklisted   |   | 9             | Exceeded Archive Depth       |   | 10            | Not Scanned                  |   | 12            | Encrypted Archive            |   | 13            | Exceeded Archive Size        |   | 14            | Exceeded Archive File Number |   | 15            | Password Protected Document  |   | 16            | Exceeded Archive Timeout     |   | 17            | File type Mismatch           |   | 18            | Potentially Vulnerable File  |   | 19            | Canceled                     |   | 20            | Sensitive data found         |   | 21            | Yara Rule Matched            |   | 22            | Potentially Unwanted Program |   | 23            | Unsupported file type        |   | 255           | In Progress                  | 
type ProcessingResultsIndexEnum int32

// List of ProcessingResultsIndexEnum
const (
	_0 ProcessingResultsIndexEnum = 0
	_1 ProcessingResultsIndexEnum = 1
	_2 ProcessingResultsIndexEnum = 2
	_3 ProcessingResultsIndexEnum = 3
	_4 ProcessingResultsIndexEnum = 4
	_7 ProcessingResultsIndexEnum = 7
	_8 ProcessingResultsIndexEnum = 8
	_9 ProcessingResultsIndexEnum = 9
	_10 ProcessingResultsIndexEnum = 10
	_12 ProcessingResultsIndexEnum = 12
	_13 ProcessingResultsIndexEnum = 13
	_14 ProcessingResultsIndexEnum = 14
	_15 ProcessingResultsIndexEnum = 15
	_16 ProcessingResultsIndexEnum = 16
	_17 ProcessingResultsIndexEnum = 17
	_18 ProcessingResultsIndexEnum = 18
	_19 ProcessingResultsIndexEnum = 19
	_20 ProcessingResultsIndexEnum = 20
	_21 ProcessingResultsIndexEnum = 21
	_22 ProcessingResultsIndexEnum = 22
	_23 ProcessingResultsIndexEnum = 23
	_255 ProcessingResultsIndexEnum = 255
)
