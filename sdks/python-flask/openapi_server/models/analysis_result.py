# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.analysis_result_process_info import AnalysisResultProcessInfo
from openapi_server.models.dlp_response import DLPResponse
from openapi_server.models.file_information import FileInformation
from openapi_server.models.metascan_report import MetascanReport
from openapi_server.models.vulnerability_response import VulnerabilityResponse
from openapi_server.models.yara_report import YaraReport
from openapi_server import util

from openapi_server.models.analysis_result_process_info import AnalysisResultProcessInfo  # noqa: E501
from openapi_server.models.dlp_response import DLPResponse  # noqa: E501
from openapi_server.models.file_information import FileInformation  # noqa: E501
from openapi_server.models.metascan_report import MetascanReport  # noqa: E501
from openapi_server.models.vulnerability_response import VulnerabilityResponse  # noqa: E501
from openapi_server.models.yara_report import YaraReport  # noqa: E501

class AnalysisResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_id=None, dlp_info=None, file_info=None, process_info=None, scan_results=None, vulnerability_info=None, yara=None):  # noqa: E501
        """AnalysisResult - a model defined in OpenAPI

        :param data_id: The data_id of this AnalysisResult.  # noqa: E501
        :type data_id: str
        :param dlp_info: The dlp_info of this AnalysisResult.  # noqa: E501
        :type dlp_info: DLPResponse
        :param file_info: The file_info of this AnalysisResult.  # noqa: E501
        :type file_info: FileInformation
        :param process_info: The process_info of this AnalysisResult.  # noqa: E501
        :type process_info: AnalysisResultProcessInfo
        :param scan_results: The scan_results of this AnalysisResult.  # noqa: E501
        :type scan_results: MetascanReport
        :param vulnerability_info: The vulnerability_info of this AnalysisResult.  # noqa: E501
        :type vulnerability_info: VulnerabilityResponse
        :param yara: The yara of this AnalysisResult.  # noqa: E501
        :type yara: YaraReport
        """
        self.openapi_types = {
            'data_id': str,
            'dlp_info': DLPResponse,
            'file_info': FileInformation,
            'process_info': AnalysisResultProcessInfo,
            'scan_results': MetascanReport,
            'vulnerability_info': VulnerabilityResponse,
            'yara': YaraReport
        }

        self.attribute_map = {
            'data_id': 'data_id',
            'dlp_info': 'dlp_info',
            'file_info': 'file_info',
            'process_info': 'process_info',
            'scan_results': 'scan_results',
            'vulnerability_info': 'vulnerability_info',
            'yara': 'yara'
        }

        self._data_id = data_id
        self._dlp_info = dlp_info
        self._file_info = file_info
        self._process_info = process_info
        self._scan_results = scan_results
        self._vulnerability_info = vulnerability_info
        self._yara = yara

    @classmethod
    def from_dict(cls, dikt) -> 'AnalysisResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisResult of this AnalysisResult.  # noqa: E501
        :rtype: AnalysisResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_id(self):
        """Gets the data_id of this AnalysisResult.

        data identifier of the requested file  # noqa: E501

        :return: The data_id of this AnalysisResult.
        :rtype: str
        """
        return self._data_id

    @data_id.setter
    def data_id(self, data_id):
        """Sets the data_id of this AnalysisResult.

        data identifier of the requested file  # noqa: E501

        :param data_id: The data_id of this AnalysisResult.
        :type data_id: str
        """

        self._data_id = data_id

    @property
    def dlp_info(self):
        """Gets the dlp_info of this AnalysisResult.


        :return: The dlp_info of this AnalysisResult.
        :rtype: DLPResponse
        """
        return self._dlp_info

    @dlp_info.setter
    def dlp_info(self, dlp_info):
        """Sets the dlp_info of this AnalysisResult.


        :param dlp_info: The dlp_info of this AnalysisResult.
        :type dlp_info: DLPResponse
        """

        self._dlp_info = dlp_info

    @property
    def file_info(self):
        """Gets the file_info of this AnalysisResult.


        :return: The file_info of this AnalysisResult.
        :rtype: FileInformation
        """
        return self._file_info

    @file_info.setter
    def file_info(self, file_info):
        """Sets the file_info of this AnalysisResult.


        :param file_info: The file_info of this AnalysisResult.
        :type file_info: FileInformation
        """

        self._file_info = file_info

    @property
    def process_info(self):
        """Gets the process_info of this AnalysisResult.


        :return: The process_info of this AnalysisResult.
        :rtype: AnalysisResultProcessInfo
        """
        return self._process_info

    @process_info.setter
    def process_info(self, process_info):
        """Sets the process_info of this AnalysisResult.


        :param process_info: The process_info of this AnalysisResult.
        :type process_info: AnalysisResultProcessInfo
        """

        self._process_info = process_info

    @property
    def scan_results(self):
        """Gets the scan_results of this AnalysisResult.


        :return: The scan_results of this AnalysisResult.
        :rtype: MetascanReport
        """
        return self._scan_results

    @scan_results.setter
    def scan_results(self, scan_results):
        """Sets the scan_results of this AnalysisResult.


        :param scan_results: The scan_results of this AnalysisResult.
        :type scan_results: MetascanReport
        """

        self._scan_results = scan_results

    @property
    def vulnerability_info(self):
        """Gets the vulnerability_info of this AnalysisResult.


        :return: The vulnerability_info of this AnalysisResult.
        :rtype: VulnerabilityResponse
        """
        return self._vulnerability_info

    @vulnerability_info.setter
    def vulnerability_info(self, vulnerability_info):
        """Sets the vulnerability_info of this AnalysisResult.


        :param vulnerability_info: The vulnerability_info of this AnalysisResult.
        :type vulnerability_info: VulnerabilityResponse
        """

        self._vulnerability_info = vulnerability_info

    @property
    def yara(self):
        """Gets the yara of this AnalysisResult.


        :return: The yara of this AnalysisResult.
        :rtype: YaraReport
        """
        return self._yara

    @yara.setter
    def yara(self, yara):
        """Sets the yara of this AnalysisResult.


        :param yara: The yara of this AnalysisResult.
        :type yara: YaraReport
        """

        self._yara = yara
