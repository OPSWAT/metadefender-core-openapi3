# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class VulnerabilityResponseResultDetectedProductVersionData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count_behind=None, feed_id=None, version=None):  # noqa: E501
        """VulnerabilityResponseResultDetectedProductVersionData - a model defined in OpenAPI

        :param count_behind: The count_behind of this VulnerabilityResponseResultDetectedProductVersionData.  # noqa: E501
        :type count_behind: int
        :param feed_id: The feed_id of this VulnerabilityResponseResultDetectedProductVersionData.  # noqa: E501
        :type feed_id: int
        :param version: The version of this VulnerabilityResponseResultDetectedProductVersionData.  # noqa: E501
        :type version: str
        """
        self.openapi_types = {
            'count_behind': int,
            'feed_id': int,
            'version': str
        }

        self.attribute_map = {
            'count_behind': 'count_behind',
            'feed_id': 'feed_id',
            'version': 'version'
        }

        self._count_behind = count_behind
        self._feed_id = feed_id
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'VulnerabilityResponseResultDetectedProductVersionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VulnerabilityResponse_result_detected_product_version_data of this VulnerabilityResponseResultDetectedProductVersionData.  # noqa: E501
        :rtype: VulnerabilityResponseResultDetectedProductVersionData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count_behind(self):
        """Gets the count_behind of this VulnerabilityResponseResultDetectedProductVersionData.

        The number of patches behind of the installed product  # noqa: E501

        :return: The count_behind of this VulnerabilityResponseResultDetectedProductVersionData.
        :rtype: int
        """
        return self._count_behind

    @count_behind.setter
    def count_behind(self, count_behind):
        """Sets the count_behind of this VulnerabilityResponseResultDetectedProductVersionData.

        The number of patches behind of the installed product  # noqa: E501

        :param count_behind: The count_behind of this VulnerabilityResponseResultDetectedProductVersionData.
        :type count_behind: int
        """

        self._count_behind = count_behind

    @property
    def feed_id(self):
        """Gets the feed_id of this VulnerabilityResponseResultDetectedProductVersionData.

        The remote feed ID used to determine patch level  # noqa: E501

        :return: The feed_id of this VulnerabilityResponseResultDetectedProductVersionData.
        :rtype: int
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this VulnerabilityResponseResultDetectedProductVersionData.

        The remote feed ID used to determine patch level  # noqa: E501

        :param feed_id: The feed_id of this VulnerabilityResponseResultDetectedProductVersionData.
        :type feed_id: int
        """

        self._feed_id = feed_id

    @property
    def version(self):
        """Gets the version of this VulnerabilityResponseResultDetectedProductVersionData.

        The current version of the product in the remote feed  # noqa: E501

        :return: The version of this VulnerabilityResponseResultDetectedProductVersionData.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this VulnerabilityResponseResultDetectedProductVersionData.

        The current version of the product in the remote feed  # noqa: E501

        :param version: The version of this VulnerabilityResponseResultDetectedProductVersionData.
        :type version: str
        """

        self._version = version
