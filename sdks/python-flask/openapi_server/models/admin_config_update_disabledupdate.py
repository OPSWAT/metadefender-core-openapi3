# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AdminConfigUpdateDisabledupdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days=None, _from=None, to=None):  # noqa: E501
        """AdminConfigUpdateDisabledupdate - a model defined in OpenAPI

        :param days: The days of this AdminConfigUpdateDisabledupdate.  # noqa: E501
        :type days: str
        :param _from: The _from of this AdminConfigUpdateDisabledupdate.  # noqa: E501
        :type _from: int
        :param to: The to of this AdminConfigUpdateDisabledupdate.  # noqa: E501
        :type to: int
        """
        self.openapi_types = {
            'days': str,
            '_from': int,
            'to': int
        }

        self.attribute_map = {
            'days': 'days',
            '_from': 'from',
            'to': 'to'
        }

        self._days = days
        self.__from = _from
        self._to = to

    @classmethod
    def from_dict(cls, dikt) -> 'AdminConfigUpdateDisabledupdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdminConfigUpdate_disabledupdate of this AdminConfigUpdateDisabledupdate.  # noqa: E501
        :rtype: AdminConfigUpdateDisabledupdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days(self):
        """Gets the days of this AdminConfigUpdateDisabledupdate.

        A particular day (index of the week) or a defined interval (Fri-Sun -> 5-7)  # noqa: E501

        :return: The days of this AdminConfigUpdateDisabledupdate.
        :rtype: str
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this AdminConfigUpdateDisabledupdate.

        A particular day (index of the week) or a defined interval (Fri-Sun -> 5-7)  # noqa: E501

        :param days: The days of this AdminConfigUpdateDisabledupdate.
        :type days: str
        """

        self._days = days

    @property
    def _from(self):
        """Gets the _from of this AdminConfigUpdateDisabledupdate.

        When to start the lockdown, expressed in minutes (8 AM=480)  # noqa: E501

        :return: The _from of this AdminConfigUpdateDisabledupdate.
        :rtype: int
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this AdminConfigUpdateDisabledupdate.

        When to start the lockdown, expressed in minutes (8 AM=480)  # noqa: E501

        :param _from: The _from of this AdminConfigUpdateDisabledupdate.
        :type _from: int
        """

        self.__from = _from

    @property
    def to(self):
        """Gets the to of this AdminConfigUpdateDisabledupdate.

        When to end the lockdown, expressed in minutes (4 PM=960)  # noqa: E501

        :return: The to of this AdminConfigUpdateDisabledupdate.
        :rtype: int
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this AdminConfigUpdateDisabledupdate.

        When to end the lockdown, expressed in minutes (4 PM=960)  # noqa: E501

        :param to: The to of this AdminConfigUpdateDisabledupdate.
        :type to: int
        """

        self._to = to
