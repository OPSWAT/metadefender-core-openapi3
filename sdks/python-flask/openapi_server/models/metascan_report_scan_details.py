# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.av_engine_scan_report import AVEngineScanReport
from openapi_server import util

from openapi_server.models.av_engine_scan_report import AVEngineScanReport  # noqa: E501

class MetascanReportScanDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clam_av=None):  # noqa: E501
        """MetascanReportScanDetails - a model defined in OpenAPI

        :param clam_av: The clam_av of this MetascanReportScanDetails.  # noqa: E501
        :type clam_av: AVEngineScanReport
        """
        self.openapi_types = {
            'clam_av': AVEngineScanReport
        }

        self.attribute_map = {
            'clam_av': 'ClamAV'
        }

        self._clam_av = clam_av

    @classmethod
    def from_dict(cls, dikt) -> 'MetascanReportScanDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MetascanReport_scan_details of this MetascanReportScanDetails.  # noqa: E501
        :rtype: MetascanReportScanDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clam_av(self):
        """Gets the clam_av of this MetascanReportScanDetails.


        :return: The clam_av of this MetascanReportScanDetails.
        :rtype: AVEngineScanReport
        """
        return self._clam_av

    @clam_av.setter
    def clam_av(self, clam_av):
        """Sets the clam_av of this MetascanReportScanDetails.


        :param clam_av: The clam_av of this MetascanReportScanDetails.
        :type clam_av: AVEngineScanReport
        """

        self._clam_av = clam_av
