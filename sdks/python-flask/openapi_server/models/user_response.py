# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class UserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apikey=None, directory_id=None, display_name=None, email=None, name=None, roles=None, ui_settings=None):  # noqa: E501
        """UserResponse - a model defined in OpenAPI

        :param apikey: The apikey of this UserResponse.  # noqa: E501
        :type apikey: str
        :param directory_id: The directory_id of this UserResponse.  # noqa: E501
        :type directory_id: int
        :param display_name: The display_name of this UserResponse.  # noqa: E501
        :type display_name: str
        :param email: The email of this UserResponse.  # noqa: E501
        :type email: str
        :param name: The name of this UserResponse.  # noqa: E501
        :type name: str
        :param roles: The roles of this UserResponse.  # noqa: E501
        :type roles: List[str]
        :param ui_settings: The ui_settings of this UserResponse.  # noqa: E501
        :type ui_settings: object
        """
        self.openapi_types = {
            'apikey': str,
            'directory_id': int,
            'display_name': str,
            'email': str,
            'name': str,
            'roles': List[str],
            'ui_settings': object
        }

        self.attribute_map = {
            'apikey': 'apikey',
            'directory_id': 'directory_id',
            'display_name': 'display_name',
            'email': 'email',
            'name': 'name',
            'roles': 'roles',
            'ui_settings': 'ui_settings'
        }

        self._apikey = apikey
        self._directory_id = directory_id
        self._display_name = display_name
        self._email = email
        self._name = name
        self._roles = roles
        self._ui_settings = ui_settings

    @classmethod
    def from_dict(cls, dikt) -> 'UserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserResponse of this UserResponse.  # noqa: E501
        :rtype: UserResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apikey(self):
        """Gets the apikey of this UserResponse.

        Associated apikey with this user  # noqa: E501

        :return: The apikey of this UserResponse.
        :rtype: str
        """
        return self._apikey

    @apikey.setter
    def apikey(self, apikey):
        """Sets the apikey of this UserResponse.

        Associated apikey with this user  # noqa: E501

        :param apikey: The apikey of this UserResponse.
        :type apikey: str
        """

        self._apikey = apikey

    @property
    def directory_id(self):
        """Gets the directory_id of this UserResponse.

        To which User Directories belongs to (LOCAL/System/etc.)  # noqa: E501

        :return: The directory_id of this UserResponse.
        :rtype: int
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this UserResponse.

        To which User Directories belongs to (LOCAL/System/etc.)  # noqa: E501

        :param directory_id: The directory_id of this UserResponse.
        :type directory_id: int
        """

        self._directory_id = directory_id

    @property
    def display_name(self):
        """Gets the display_name of this UserResponse.

        Which is the name showed in the Management Console  # noqa: E501

        :return: The display_name of this UserResponse.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UserResponse.

        Which is the name showed in the Management Console  # noqa: E501

        :param display_name: The display_name of this UserResponse.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this UserResponse.

        User's email address  # noqa: E501

        :return: The email of this UserResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserResponse.

        User's email address  # noqa: E501

        :param email: The email of this UserResponse.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this UserResponse.

        User's full name  # noqa: E501

        :return: The name of this UserResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserResponse.

        User's full name  # noqa: E501

        :param name: The name of this UserResponse.
        :type name: str
        """

        self._name = name

    @property
    def roles(self):
        """Gets the roles of this UserResponse.

        A list of roles attached to this user  # noqa: E501

        :return: The roles of this UserResponse.
        :rtype: List[str]
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this UserResponse.

        A list of roles attached to this user  # noqa: E501

        :param roles: The roles of this UserResponse.
        :type roles: List[str]
        """

        self._roles = roles

    @property
    def ui_settings(self):
        """Gets the ui_settings of this UserResponse.

        Configuration of Management Console for this user.  # noqa: E501

        :return: The ui_settings of this UserResponse.
        :rtype: object
        """
        return self._ui_settings

    @ui_settings.setter
    def ui_settings(self, ui_settings):
        """Sets the ui_settings of this UserResponse.

        Configuration of Management Console for this user.  # noqa: E501

        :param ui_settings: The ui_settings of this UserResponse.
        :type ui_settings: object
        """

        self._ui_settings = ui_settings
