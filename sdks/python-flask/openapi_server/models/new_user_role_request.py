# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.new_user_role_request_rights import NewUserRoleRequestRights
from openapi_server import util

from openapi_server.models.new_user_role_request_rights import NewUserRoleRequestRights  # noqa: E501

class NewUserRoleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, display_name=None, rights=None):  # noqa: E501
        """NewUserRoleRequest - a model defined in OpenAPI

        :param name: The name of this NewUserRoleRequest.  # noqa: E501
        :type name: str
        :param display_name: The display_name of this NewUserRoleRequest.  # noqa: E501
        :type display_name: str
        :param rights: The rights of this NewUserRoleRequest.  # noqa: E501
        :type rights: NewUserRoleRequestRights
        """
        self.openapi_types = {
            'name': str,
            'display_name': str,
            'rights': NewUserRoleRequestRights
        }

        self.attribute_map = {
            'name': 'name',
            'display_name': 'display_name',
            'rights': 'rights'
        }

        self._name = name
        self._display_name = display_name
        self._rights = rights

    @classmethod
    def from_dict(cls, dikt) -> 'NewUserRoleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NewUserRoleRequest of this NewUserRoleRequest.  # noqa: E501
        :rtype: NewUserRoleRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this NewUserRoleRequest.

        The name identifier of the role  # noqa: E501

        :return: The name of this NewUserRoleRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NewUserRoleRequest.

        The name identifier of the role  # noqa: E501

        :param name: The name of this NewUserRoleRequest.
        :type name: str
        """

        self._name = name

    @property
    def display_name(self):
        """Gets the display_name of this NewUserRoleRequest.

        The extended name showed in the Management Console.  # noqa: E501

        :return: The display_name of this NewUserRoleRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this NewUserRoleRequest.

        The extended name showed in the Management Console.  # noqa: E501

        :param display_name: The display_name of this NewUserRoleRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def rights(self):
        """Gets the rights of this NewUserRoleRequest.


        :return: The rights of this NewUserRoleRequest.
        :rtype: NewUserRoleRequestRights
        """
        return self._rights

    @rights.setter
    def rights(self, rights):
        """Sets the rights of this NewUserRoleRequest.


        :param rights: The rights of this NewUserRoleRequest.
        :type rights: NewUserRoleRequestRights
        """

        self._rights = rights
