# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class StatNodesIssues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description=None, severity=None):  # noqa: E501
        """StatNodesIssues - a model defined in OpenAPI

        :param description: The description of this StatNodesIssues.  # noqa: E501
        :type description: str
        :param severity: The severity of this StatNodesIssues.  # noqa: E501
        :type severity: str
        """
        self.openapi_types = {
            'description': str,
            'severity': str
        }

        self.attribute_map = {
            'description': 'description',
            'severity': 'severity'
        }

        self._description = description
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt) -> 'StatNodesIssues':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _stat_nodes_issues of this StatNodesIssues.  # noqa: E501
        :rtype: StatNodesIssues
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this StatNodesIssues.

        Text detailing the issue.  # noqa: E501

        :return: The description of this StatNodesIssues.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StatNodesIssues.

        Text detailing the issue.  # noqa: E501

        :param description: The description of this StatNodesIssues.
        :type description: str
        """

        self._description = description

    @property
    def severity(self):
        """Gets the severity of this StatNodesIssues.

        How important is the reported issue.  # noqa: E501

        :return: The severity of this StatNodesIssues.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this StatNodesIssues.

        How important is the reported issue.  # noqa: E501

        :param severity: The severity of this StatNodesIssues.
        :type severity: str
        """

        self._severity = severity
