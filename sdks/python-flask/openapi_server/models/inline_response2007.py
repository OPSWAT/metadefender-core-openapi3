# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.inline_response2007_issues import InlineResponse2007Issues
from openapi_server import util

from openapi_server.models.inline_response2007_issues import InlineResponse2007Issues  # noqa: E501

class InlineResponse2007(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, start_time=None, issues=None):  # noqa: E501
        """InlineResponse2007 - a model defined in OpenAPI

        :param status: The status of this InlineResponse2007.  # noqa: E501
        :type status: str
        :param start_time: The start_time of this InlineResponse2007.  # noqa: E501
        :type start_time: str
        :param issues: The issues of this InlineResponse2007.  # noqa: E501
        :type issues: InlineResponse2007Issues
        """
        self.openapi_types = {
            'status': str,
            'start_time': str,
            'issues': InlineResponse2007Issues
        }

        self.attribute_map = {
            'status': 'status',
            'start_time': 'start_time',
            'issues': 'issues'
        }

        self._status = status
        self._start_time = start_time
        self._issues = issues

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2007':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_7 of this InlineResponse2007.  # noqa: E501
        :rtype: InlineResponse2007
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this InlineResponse2007.

        Current status of generating the package.  # noqa: E501

        :return: The status of this InlineResponse2007.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse2007.

        Current status of generating the package.  # noqa: E501

        :param status: The status of this InlineResponse2007.
        :type status: str
        """
        allowed_values = ["idle", "error", "inprogress"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this InlineResponse2007.

        Used only when status is inprogress, otherwise its empty  # noqa: E501

        :return: The start_time of this InlineResponse2007.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InlineResponse2007.

        Used only when status is inprogress, otherwise its empty  # noqa: E501

        :param start_time: The start_time of this InlineResponse2007.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def issues(self):
        """Gets the issues of this InlineResponse2007.


        :return: The issues of this InlineResponse2007.
        :rtype: InlineResponse2007Issues
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this InlineResponse2007.


        :param issues: The issues of this InlineResponse2007.
        :type issues: InlineResponse2007Issues
        """

        self._issues = issues
