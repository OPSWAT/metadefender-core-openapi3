/* 
 * MetaDefender Core
 *
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  - -- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   - -- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Possible overall and per engine analysis results:   | scan_result_i | scan_result_a                |   |- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|   | 0             | No Threat Detected           |   | 1             | Infected                     |   | 2             | Suspicious                   |   | 3             | Failed                       |   | 4             | Cleaned / Deleted            |   | 7             | Scan Skipped - Whitelisted   |   | 8             | Scan Skipped - Blacklisted   |   | 9             | Exceeded Archive Depth       |   | 10            | Not Scanned                  |   | 12            | Encrypted Archive            |   | 13            | Exceeded Archive Size        |   | 14            | Exceeded Archive File Number |   | 15            | Password Protected Document  |   | 16            | Exceeded Archive Timeout     |   | 17            | File type Mismatch           |   | 18            | Potentially Vulnerable File  |   | 19            | Canceled                     |   | 20            | Sensitive data found         |   | 21            | Yara Rule Matched            |   | 22            | Potentially Unwanted Program |   | 23            | Unsupported file type        |   | 255           | In Progress                  | 
    /// </summary>
    /// <value>Possible overall and per engine analysis results:   | scan_result_i | scan_result_a                |   |- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|   | 0             | No Threat Detected           |   | 1             | Infected                     |   | 2             | Suspicious                   |   | 3             | Failed                       |   | 4             | Cleaned / Deleted            |   | 7             | Scan Skipped - Whitelisted   |   | 8             | Scan Skipped - Blacklisted   |   | 9             | Exceeded Archive Depth       |   | 10            | Not Scanned                  |   | 12            | Encrypted Archive            |   | 13            | Exceeded Archive Size        |   | 14            | Exceeded Archive File Number |   | 15            | Password Protected Document  |   | 16            | Exceeded Archive Timeout     |   | 17            | File type Mismatch           |   | 18            | Potentially Vulnerable File  |   | 19            | Canceled                     |   | 20            | Sensitive data found         |   | 21            | Yara Rule Matched            |   | 22            | Potentially Unwanted Program |   | 23            | Unsupported file type        |   | 255           | In Progress                  | </value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum ProcessingResultsIndexEnum
    {
        /// <summary>
        /// Enum NUMBER_0 for value: 0
        /// </summary>
        [EnumMember(Value = "0")]
        NUMBER_0 = 1,

        /// <summary>
        /// Enum NUMBER_1 for value: 1
        /// </summary>
        [EnumMember(Value = "1")]
        NUMBER_1 = 2,

        /// <summary>
        /// Enum NUMBER_2 for value: 2
        /// </summary>
        [EnumMember(Value = "2")]
        NUMBER_2 = 3,

        /// <summary>
        /// Enum NUMBER_3 for value: 3
        /// </summary>
        [EnumMember(Value = "3")]
        NUMBER_3 = 4,

        /// <summary>
        /// Enum NUMBER_4 for value: 4
        /// </summary>
        [EnumMember(Value = "4")]
        NUMBER_4 = 5,

        /// <summary>
        /// Enum NUMBER_7 for value: 7
        /// </summary>
        [EnumMember(Value = "7")]
        NUMBER_7 = 6,

        /// <summary>
        /// Enum NUMBER_8 for value: 8
        /// </summary>
        [EnumMember(Value = "8")]
        NUMBER_8 = 7,

        /// <summary>
        /// Enum NUMBER_9 for value: 9
        /// </summary>
        [EnumMember(Value = "9")]
        NUMBER_9 = 8,

        /// <summary>
        /// Enum NUMBER_10 for value: 10
        /// </summary>
        [EnumMember(Value = "10")]
        NUMBER_10 = 9,

        /// <summary>
        /// Enum NUMBER_12 for value: 12
        /// </summary>
        [EnumMember(Value = "12")]
        NUMBER_12 = 10,

        /// <summary>
        /// Enum NUMBER_13 for value: 13
        /// </summary>
        [EnumMember(Value = "13")]
        NUMBER_13 = 11,

        /// <summary>
        /// Enum NUMBER_14 for value: 14
        /// </summary>
        [EnumMember(Value = "14")]
        NUMBER_14 = 12,

        /// <summary>
        /// Enum NUMBER_15 for value: 15
        /// </summary>
        [EnumMember(Value = "15")]
        NUMBER_15 = 13,

        /// <summary>
        /// Enum NUMBER_16 for value: 16
        /// </summary>
        [EnumMember(Value = "16")]
        NUMBER_16 = 14,

        /// <summary>
        /// Enum NUMBER_17 for value: 17
        /// </summary>
        [EnumMember(Value = "17")]
        NUMBER_17 = 15,

        /// <summary>
        /// Enum NUMBER_18 for value: 18
        /// </summary>
        [EnumMember(Value = "18")]
        NUMBER_18 = 16,

        /// <summary>
        /// Enum NUMBER_19 for value: 19
        /// </summary>
        [EnumMember(Value = "19")]
        NUMBER_19 = 17,

        /// <summary>
        /// Enum NUMBER_20 for value: 20
        /// </summary>
        [EnumMember(Value = "20")]
        NUMBER_20 = 18,

        /// <summary>
        /// Enum NUMBER_21 for value: 21
        /// </summary>
        [EnumMember(Value = "21")]
        NUMBER_21 = 19,

        /// <summary>
        /// Enum NUMBER_22 for value: 22
        /// </summary>
        [EnumMember(Value = "22")]
        NUMBER_22 = 20,

        /// <summary>
        /// Enum NUMBER_23 for value: 23
        /// </summary>
        [EnumMember(Value = "23")]
        NUMBER_23 = 21,

        /// <summary>
        /// Enum NUMBER_255 for value: 255
        /// </summary>
        [EnumMember(Value = "255")]
        NUMBER_255 = 22

    }

}
