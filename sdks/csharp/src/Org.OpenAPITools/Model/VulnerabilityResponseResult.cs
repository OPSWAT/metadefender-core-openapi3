/* 
 * MetaDefender Core
 *
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  - -- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   - -- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The result information provided by the OESIS Framework
    /// </summary>
    [DataContract]
    public partial class VulnerabilityResponseResult :  IEquatable<VulnerabilityResponseResult>, IValidatableObject
    {
        /// <summary>
        /// The method used by OESIS Framework, it should be 50700 every time.
        /// </summary>
        /// <value>The method used by OESIS Framework, it should be 50700 every time.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MethodEnum
        {
            /// <summary>
            /// Enum NUMBER_50700 for value: 50700
            /// </summary>
            NUMBER_50700 = 50700

        }

        /// <summary>
        /// The method used by OESIS Framework, it should be 50700 every time.
        /// </summary>
        /// <value>The method used by OESIS Framework, it should be 50700 every time.</value>
        [DataMember(Name="method", EmitDefaultValue=false)]
        public MethodEnum? Method { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="VulnerabilityResponseResult" /> class.
        /// </summary>
        /// <param name="code">The result code for vulnerability check, 0 means a successful check.</param>
        /// <param name="hash">The file&#39;s SHA1 hash value.</param>
        /// <param name="method">The method used by OESIS Framework, it should be 50700 every time..</param>
        /// <param name="timestamp">Timestamp of the request issued.</param>
        /// <param name="timing">The vulnerability check&#39;s duration in milliseconds.</param>
        /// <param name="detectedProduct">detectedProduct.</param>
        /// <param name="vulnerabilites">A list of specific vulnerabilities.</param>
        public VulnerabilityResponseResult(int code = default(int), string hash = default(string), MethodEnum? method = default(MethodEnum?), string timestamp = default(string), int timing = default(int), VulnerabilityResponseResultDetectedProduct detectedProduct = default(VulnerabilityResponseResultDetectedProduct), List<VulnerabilityResponseResultVulnerabilites> vulnerabilites = default(List<VulnerabilityResponseResultVulnerabilites>))
        {
            this.Code = code;
            this.Hash = hash;
            this.Method = method;
            this.Timestamp = timestamp;
            this.Timing = timing;
            this.DetectedProduct = detectedProduct;
            this.Vulnerabilites = vulnerabilites;
        }
        
        /// <summary>
        /// The result code for vulnerability check, 0 means a successful check
        /// </summary>
        /// <value>The result code for vulnerability check, 0 means a successful check</value>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public int Code { get; set; }

        /// <summary>
        /// The file&#39;s SHA1 hash value
        /// </summary>
        /// <value>The file&#39;s SHA1 hash value</value>
        [DataMember(Name="hash", EmitDefaultValue=false)]
        public string Hash { get; set; }


        /// <summary>
        /// Timestamp of the request issued
        /// </summary>
        /// <value>Timestamp of the request issued</value>
        [DataMember(Name="timestamp", EmitDefaultValue=false)]
        public string Timestamp { get; set; }

        /// <summary>
        /// The vulnerability check&#39;s duration in milliseconds
        /// </summary>
        /// <value>The vulnerability check&#39;s duration in milliseconds</value>
        [DataMember(Name="timing", EmitDefaultValue=false)]
        public int Timing { get; set; }

        /// <summary>
        /// Gets or Sets DetectedProduct
        /// </summary>
        [DataMember(Name="detected_product", EmitDefaultValue=false)]
        public VulnerabilityResponseResultDetectedProduct DetectedProduct { get; set; }

        /// <summary>
        /// A list of specific vulnerabilities
        /// </summary>
        /// <value>A list of specific vulnerabilities</value>
        [DataMember(Name="vulnerabilites", EmitDefaultValue=false)]
        public List<VulnerabilityResponseResultVulnerabilites> Vulnerabilites { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VulnerabilityResponseResult {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Hash: ").Append(Hash).Append("\n");
            sb.Append("  Method: ").Append(Method).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  Timing: ").Append(Timing).Append("\n");
            sb.Append("  DetectedProduct: ").Append(DetectedProduct).Append("\n");
            sb.Append("  Vulnerabilites: ").Append(Vulnerabilites).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VulnerabilityResponseResult);
        }

        /// <summary>
        /// Returns true if VulnerabilityResponseResult instances are equal
        /// </summary>
        /// <param name="input">Instance of VulnerabilityResponseResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VulnerabilityResponseResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Hash == input.Hash ||
                    (this.Hash != null &&
                    this.Hash.Equals(input.Hash))
                ) && 
                (
                    this.Method == input.Method ||
                    (this.Method != null &&
                    this.Method.Equals(input.Method))
                ) && 
                (
                    this.Timestamp == input.Timestamp ||
                    (this.Timestamp != null &&
                    this.Timestamp.Equals(input.Timestamp))
                ) && 
                (
                    this.Timing == input.Timing ||
                    (this.Timing != null &&
                    this.Timing.Equals(input.Timing))
                ) && 
                (
                    this.DetectedProduct == input.DetectedProduct ||
                    (this.DetectedProduct != null &&
                    this.DetectedProduct.Equals(input.DetectedProduct))
                ) && 
                (
                    this.Vulnerabilites == input.Vulnerabilites ||
                    this.Vulnerabilites != null &&
                    input.Vulnerabilites != null &&
                    this.Vulnerabilites.SequenceEqual(input.Vulnerabilites)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Hash != null)
                    hashCode = hashCode * 59 + this.Hash.GetHashCode();
                if (this.Method != null)
                    hashCode = hashCode * 59 + this.Method.GetHashCode();
                if (this.Timestamp != null)
                    hashCode = hashCode * 59 + this.Timestamp.GetHashCode();
                if (this.Timing != null)
                    hashCode = hashCode * 59 + this.Timing.GetHashCode();
                if (this.DetectedProduct != null)
                    hashCode = hashCode * 59 + this.DetectedProduct.GetHashCode();
                if (this.Vulnerabilites != null)
                    hashCode = hashCode * 59 + this.Vulnerabilites.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
