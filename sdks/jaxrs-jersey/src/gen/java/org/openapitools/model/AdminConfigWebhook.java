/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Webhook configuration details.
 */
@ApiModel(description = "Webhook configuration details.")
@JsonPropertyOrder({
  AdminConfigWebhook.JSON_PROPERTY_MAXRETRYTIME,
  AdminConfigWebhook.JSON_PROPERTY_DELAYDURATION,
  AdminConfigWebhook.JSON_PROPERTY_DEPLAYPROGRESSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-05-15T23:49:49.064488Z[UTC]")
public class AdminConfigWebhook   {
  public static final String JSON_PROPERTY_MAXRETRYTIME = "maxretrytime";
  @JsonProperty(JSON_PROPERTY_MAXRETRYTIME)
  private BigDecimal maxretrytime;

  public static final String JSON_PROPERTY_DELAYDURATION = "delayduration";
  @JsonProperty(JSON_PROPERTY_DELAYDURATION)
  private BigDecimal delayduration;

  public static final String JSON_PROPERTY_DEPLAYPROGRESSION = "deplayprogression";
  @JsonProperty(JSON_PROPERTY_DEPLAYPROGRESSION)
  private BigDecimal deplayprogression;

  public AdminConfigWebhook maxretrytime(BigDecimal maxretrytime) {
    this.maxretrytime = maxretrytime;
    return this;
  }

  /**
   * Number of allowed retries sending callback to client when failed.  &gt; _**For example**_: maxretrytime&#x3D; 3  Sending callback failed for some reasons   * 1st retry triggered after delayduration (ms)   * 2nd retry triggered after delayduration+ delayprogression (ms)   * 3rd retry triggered after delayduration+ 2*delayprogression (ms) 
   * @return maxretrytime
   **/
  @JsonProperty("maxretrytime")
  @ApiModelProperty(example = "3", value = "Number of allowed retries sending callback to client when failed.  > _**For example**_: maxretrytime= 3  Sending callback failed for some reasons   * 1st retry triggered after delayduration (ms)   * 2nd retry triggered after delayduration+ delayprogression (ms)   * 3rd retry triggered after delayduration+ 2*delayprogression (ms) ")
  @Valid 
  public BigDecimal getMaxretrytime() {
    return maxretrytime;
  }

  public void setMaxretrytime(BigDecimal maxretrytime) {
    this.maxretrytime = maxretrytime;
  }

  public AdminConfigWebhook delayduration(BigDecimal delayduration) {
    this.delayduration = delayduration;
    return this;
  }

  /**
   * in milliseconds
   * @return delayduration
   **/
  @JsonProperty("delayduration")
  @ApiModelProperty(example = "1000", value = "in milliseconds")
  @Valid 
  public BigDecimal getDelayduration() {
    return delayduration;
  }

  public void setDelayduration(BigDecimal delayduration) {
    this.delayduration = delayduration;
  }

  public AdminConfigWebhook deplayprogression(BigDecimal deplayprogression) {
    this.deplayprogression = deplayprogression;
    return this;
  }

  /**
   * in milliseconds
   * @return deplayprogression
   **/
  @JsonProperty("deplayprogression")
  @ApiModelProperty(example = "1000", value = "in milliseconds")
  @Valid 
  public BigDecimal getDeplayprogression() {
    return deplayprogression;
  }

  public void setDeplayprogression(BigDecimal deplayprogression) {
    this.deplayprogression = deplayprogression;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminConfigWebhook adminConfigWebhook = (AdminConfigWebhook) o;
    return Objects.equals(this.maxretrytime, adminConfigWebhook.maxretrytime) &&
        Objects.equals(this.delayduration, adminConfigWebhook.delayduration) &&
        Objects.equals(this.deplayprogression, adminConfigWebhook.deplayprogression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxretrytime, delayduration, deplayprogression);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminConfigWebhook {\n");
    
    sb.append("    maxretrytime: ").append(toIndentedString(maxretrytime)).append("\n");
    sb.append("    delayduration: ").append(toIndentedString(delayduration)).append("\n");
    sb.append("    deplayprogression: ").append(toIndentedString(deplayprogression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

