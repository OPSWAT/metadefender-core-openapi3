/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * User object in MetaDefender.
 */
@ApiModel(description = "User object in MetaDefender.")
@JsonPropertyOrder({
  UserResponse.JSON_PROPERTY_APIKEY,
  UserResponse.JSON_PROPERTY_DIRECTORY_ID,
  UserResponse.JSON_PROPERTY_DISPLAY_NAME,
  UserResponse.JSON_PROPERTY_EMAIL,
  UserResponse.JSON_PROPERTY_NAME,
  UserResponse.JSON_PROPERTY_ROLES,
  UserResponse.JSON_PROPERTY_UI_SETTINGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-05-15T23:49:49.064488Z[UTC]")
public class UserResponse   {
  public static final String JSON_PROPERTY_APIKEY = "apikey";
  @JsonProperty(JSON_PROPERTY_APIKEY)
  private String apikey;

  public static final String JSON_PROPERTY_DIRECTORY_ID = "directory_id";
  @JsonProperty(JSON_PROPERTY_DIRECTORY_ID)
  private Integer directoryId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  private String displayName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @JsonProperty(JSON_PROPERTY_EMAIL)
  private String email;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public static final String JSON_PROPERTY_ROLES = "roles";
  @JsonProperty(JSON_PROPERTY_ROLES)
  private List<String> roles = null;

  public static final String JSON_PROPERTY_UI_SETTINGS = "ui_settings";
  @JsonProperty(JSON_PROPERTY_UI_SETTINGS)
  private Object uiSettings;

  public UserResponse apikey(String apikey) {
    this.apikey = apikey;
    return this;
  }

  /**
   * Associated apikey with this user
   * @return apikey
   **/
  @JsonProperty("apikey")
  @ApiModelProperty(example = "b8a4b52f19de88e365aa4f7e403fa91b352f", value = "Associated apikey with this user")
  
  public String getApikey() {
    return apikey;
  }

  public void setApikey(String apikey) {
    this.apikey = apikey;
  }

  public UserResponse directoryId(Integer directoryId) {
    this.directoryId = directoryId;
    return this;
  }

  /**
   * To which User Directories belongs to (LOCAL/System/etc.)
   * @return directoryId
   **/
  @JsonProperty("directory_id")
  @ApiModelProperty(example = "1", value = "To which User Directories belongs to (LOCAL/System/etc.)")
  
  public Integer getDirectoryId() {
    return directoryId;
  }

  public void setDirectoryId(Integer directoryId) {
    this.directoryId = directoryId;
  }

  public UserResponse displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Which is the name showed in the Management Console
   * @return displayName
   **/
  @JsonProperty("display_name")
  @ApiModelProperty(example = "jsmith", value = "Which is the name showed in the Management Console")
  
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public UserResponse email(String email) {
    this.email = email;
    return this;
  }

  /**
   * User&#39;s email address
   * @return email
   **/
  @JsonProperty("email")
  @ApiModelProperty(example = "john.smith@company.com", value = "User's email address")
  
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * User&#39;s full name
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(example = "John Smith", value = "User's full name")
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserResponse roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public UserResponse addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
   * A list of roles attached to this user
   * @return roles
   **/
  @JsonProperty("roles")
  @ApiModelProperty(example = "[1, 2, 3, ...]", value = "A list of roles attached to this user")
  
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public UserResponse uiSettings(Object uiSettings) {
    this.uiSettings = uiSettings;
    return this;
  }

  /**
   * Configuration of Management Console for this user.
   * @return uiSettings
   **/
  @JsonProperty("ui_settings")
  @ApiModelProperty(example = "{refresh_rate={value=30}, time_period={value=24, unitsInHour=1}}", value = "Configuration of Management Console for this user.")
  @Valid 
  public Object getUiSettings() {
    return uiSettings;
  }

  public void setUiSettings(Object uiSettings) {
    this.uiSettings = uiSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponse userResponse = (UserResponse) o;
    return Objects.equals(this.apikey, userResponse.apikey) &&
        Objects.equals(this.directoryId, userResponse.directoryId) &&
        Objects.equals(this.displayName, userResponse.displayName) &&
        Objects.equals(this.email, userResponse.email) &&
        Objects.equals(this.name, userResponse.name) &&
        Objects.equals(this.roles, userResponse.roles) &&
        Objects.equals(this.uiSettings, userResponse.uiSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apikey, directoryId, displayName, email, name, roles, uiSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponse {\n");
    
    sb.append("    apikey: ").append(toIndentedString(apikey)).append("\n");
    sb.append("    directoryId: ").append(toIndentedString(directoryId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    uiSettings: ").append(toIndentedString(uiSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

