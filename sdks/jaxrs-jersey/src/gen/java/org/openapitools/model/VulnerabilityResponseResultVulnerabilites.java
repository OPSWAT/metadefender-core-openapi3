/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.model.VulnerabilityResponseResultDetails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * VulnerabilityResponseResultVulnerabilites
 */
@JsonPropertyOrder({
  VulnerabilityResponseResultVulnerabilites.JSON_PROPERTY_DESCRIPTION,
  VulnerabilityResponseResultVulnerabilites.JSON_PROPERTY_DETAILS,
  VulnerabilityResponseResultVulnerabilites.JSON_PROPERTY_SEVERITY,
  VulnerabilityResponseResultVulnerabilites.JSON_PROPERTY_SEVERITY_INDEX,
  VulnerabilityResponseResultVulnerabilites.JSON_PROPERTY_STATIC_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-05-15T23:49:49.064488Z[UTC]")
public class VulnerabilityResponseResultVulnerabilites   {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_DETAILS = "details";
  @JsonProperty(JSON_PROPERTY_DETAILS)
  private VulnerabilityResponseResultDetails details;

  public static final String JSON_PROPERTY_SEVERITY = "severity";
  @JsonProperty(JSON_PROPERTY_SEVERITY)
  private String severity;

  public static final String JSON_PROPERTY_SEVERITY_INDEX = "severity_index";
  @JsonProperty(JSON_PROPERTY_SEVERITY_INDEX)
  private Integer severityIndex;

  public static final String JSON_PROPERTY_STATIC_ID = "static_id";
  @JsonProperty(JSON_PROPERTY_STATIC_ID)
  private Integer staticId;

  public VulnerabilityResponseResultVulnerabilites description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A text description of the specific vulnerability
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(example = "Adobe Flash Player before 18.0.0.324 and 19.x and 20.x before 20.0.0.267 on Windows and OS X and before 11.2.202.559 on Linux, Adobe AIR before 20.0.0.233, Adobe AIR SDK before 20.0.0.233, and Adobe AIR SDK & Compiler before 20.0.0.233 allow attackers to execute arbitrary code or cause a denial of service (memory corruption) via unspecified vectors, a different vulnerability than CVE-2015-8460, CVE-2015-8636, and CVE-2015-8645. ", value = "A text description of the specific vulnerability")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VulnerabilityResponseResultVulnerabilites details(VulnerabilityResponseResultDetails details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   **/
  @JsonProperty("details")
  @ApiModelProperty(value = "")
  @Valid 
  public VulnerabilityResponseResultDetails getDetails() {
    return details;
  }

  public void setDetails(VulnerabilityResponseResultDetails details) {
    this.details = details;
  }

  public VulnerabilityResponseResultVulnerabilites severity(String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * String description of Severity level: &#39;low&#39;, &#39;moderate&#39;, &#39;important&#39;, &#39;critical&#39;, &#39;not_available&#39;, &#39;unknown&#39; 
   * @return severity
   **/
  @JsonProperty("severity")
  @ApiModelProperty(example = "CRITICAL", value = "String description of Severity level: 'low', 'moderate', 'important', 'critical', 'not_available', 'unknown' ")
  
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }

  public VulnerabilityResponseResultVulnerabilites severityIndex(Integer severityIndex) {
    this.severityIndex = severityIndex;
    return this;
  }

  /**
   * A 5 point scale numerical description of Severity level with 5 being greatest and 0 being unknown
   * @return severityIndex
   **/
  @JsonProperty("severity_index")
  @ApiModelProperty(example = "5", value = "A 5 point scale numerical description of Severity level with 5 being greatest and 0 being unknown")
  
  public Integer getSeverityIndex() {
    return severityIndex;
  }

  public void setSeverityIndex(Integer severityIndex) {
    this.severityIndex = severityIndex;
  }

  public VulnerabilityResponseResultVulnerabilites staticId(Integer staticId) {
    this.staticId = staticId;
    return this;
  }

  /**
   * An OPSWAT identifier for the vulnerability
   * @return staticId
   **/
  @JsonProperty("static_id")
  @ApiModelProperty(example = "20158459", value = "An OPSWAT identifier for the vulnerability")
  
  public Integer getStaticId() {
    return staticId;
  }

  public void setStaticId(Integer staticId) {
    this.staticId = staticId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityResponseResultVulnerabilites vulnerabilityResponseResultVulnerabilites = (VulnerabilityResponseResultVulnerabilites) o;
    return Objects.equals(this.description, vulnerabilityResponseResultVulnerabilites.description) &&
        Objects.equals(this.details, vulnerabilityResponseResultVulnerabilites.details) &&
        Objects.equals(this.severity, vulnerabilityResponseResultVulnerabilites.severity) &&
        Objects.equals(this.severityIndex, vulnerabilityResponseResultVulnerabilites.severityIndex) &&
        Objects.equals(this.staticId, vulnerabilityResponseResultVulnerabilites.staticId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, details, severity, severityIndex, staticId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityResponseResultVulnerabilites {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    severityIndex: ").append(toIndentedString(severityIndex)).append("\n");
    sb.append("    staticId: ").append(toIndentedString(staticId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

