/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Information about the licensed product (product type, number of activations, deploymentId, expiration date and days left)
 */
@ApiModel(description = "Information about the licensed product (product type, number of activations, deploymentId, expiration date and days left)")
@JsonPropertyOrder({
  LicenseInformation.JSON_PROPERTY_DAYS_LEFT,
  LicenseInformation.JSON_PROPERTY_DEPLOYMENT,
  LicenseInformation.JSON_PROPERTY_EXPIRATION,
  LicenseInformation.JSON_PROPERTY_LICENSED_ENGINES,
  LicenseInformation.JSON_PROPERTY_MAX_NODE_COUNT,
  LicenseInformation.JSON_PROPERTY_ONLINE_ACTIVATED,
  LicenseInformation.JSON_PROPERTY_PRODUCT_ID,
  LicenseInformation.JSON_PROPERTY_PRODUCT_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-05-15T23:49:49.064488Z[UTC]")
public class LicenseInformation   {
  public static final String JSON_PROPERTY_DAYS_LEFT = "days_left";
  @JsonProperty(JSON_PROPERTY_DAYS_LEFT)
  private Integer daysLeft;

  public static final String JSON_PROPERTY_DEPLOYMENT = "deployment";
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT)
  private String deployment;

  public static final String JSON_PROPERTY_EXPIRATION = "expiration";
  @JsonProperty(JSON_PROPERTY_EXPIRATION)
  private String expiration;

  public static final String JSON_PROPERTY_LICENSED_ENGINES = "licensed_engines";
  @JsonProperty(JSON_PROPERTY_LICENSED_ENGINES)
  private List<String> licensedEngines = null;

  public static final String JSON_PROPERTY_MAX_NODE_COUNT = "max_node_count";
  @JsonProperty(JSON_PROPERTY_MAX_NODE_COUNT)
  private String maxNodeCount;

  public static final String JSON_PROPERTY_ONLINE_ACTIVATED = "online_activated";
  @JsonProperty(JSON_PROPERTY_ONLINE_ACTIVATED)
  private Boolean onlineActivated;

  public static final String JSON_PROPERTY_PRODUCT_ID = "product_id";
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  private String productId;

  public static final String JSON_PROPERTY_PRODUCT_NAME = "product_name";
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  private String productName;

  public LicenseInformation daysLeft(Integer daysLeft) {
    this.daysLeft = daysLeft;
    return this;
  }

  /**
   * Number of days left before expiration
   * @return daysLeft
   **/
  @JsonProperty("days_left")
  @ApiModelProperty(value = "Number of days left before expiration")
  
  public Integer getDaysLeft() {
    return daysLeft;
  }

  public void setDaysLeft(Integer daysLeft) {
    this.daysLeft = daysLeft;
  }

  public LicenseInformation deployment(String deployment) {
    this.deployment = deployment;
    return this;
  }

  /**
   * Unique identifier which is maps the current deployment to the activation
   * @return deployment
   **/
  @JsonProperty("deployment")
  @ApiModelProperty(value = "Unique identifier which is maps the current deployment to the activation")
  
  public String getDeployment() {
    return deployment;
  }

  public void setDeployment(String deployment) {
    this.deployment = deployment;
  }

  public LicenseInformation expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

  /**
   * Expiration date in MM/DD/YYYY format.
   * @return expiration
   **/
  @JsonProperty("expiration")
  @ApiModelProperty(value = "Expiration date in MM/DD/YYYY format.")
  
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public LicenseInformation licensedEngines(List<String> licensedEngines) {
    this.licensedEngines = licensedEngines;
    return this;
  }

  public LicenseInformation addLicensedEnginesItem(String licensedEnginesItem) {
    if (this.licensedEngines == null) {
      this.licensedEngines = new ArrayList<String>();
    }
    this.licensedEngines.add(licensedEnginesItem);
    return this;
  }

  /**
   * List of engine/module identifiers that have been licensed
   * @return licensedEngines
   **/
  @JsonProperty("licensed_engines")
  @ApiModelProperty(value = "List of engine/module identifiers that have been licensed")
  
  public List<String> getLicensedEngines() {
    return licensedEngines;
  }

  public void setLicensedEngines(List<String> licensedEngines) {
    this.licensedEngines = licensedEngines;
  }

  public LicenseInformation maxNodeCount(String maxNodeCount) {
    this.maxNodeCount = maxNodeCount;
    return this;
  }

  /**
   * Total number of deployed MetaDefender Nodes attached to this MetaDefender Core instance.
   * @return maxNodeCount
   **/
  @JsonProperty("max_node_count")
  @ApiModelProperty(value = "Total number of deployed MetaDefender Nodes attached to this MetaDefender Core instance.")
  
  public String getMaxNodeCount() {
    return maxNodeCount;
  }

  public void setMaxNodeCount(String maxNodeCount) {
    this.maxNodeCount = maxNodeCount;
  }

  public LicenseInformation onlineActivated(Boolean onlineActivated) {
    this.onlineActivated = onlineActivated;
    return this;
  }

  /**
   * Track online/offline activation mode
   * @return onlineActivated
   **/
  @JsonProperty("online_activated")
  @ApiModelProperty(value = "Track online/offline activation mode")
  
  public Boolean getOnlineActivated() {
    return onlineActivated;
  }

  public void setOnlineActivated(Boolean onlineActivated) {
    this.onlineActivated = onlineActivated;
  }

  public LicenseInformation productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Official MetaDefender base SKU licensed.
   * @return productId
   **/
  @JsonProperty("product_id")
  @ApiModelProperty(value = "Official MetaDefender base SKU licensed.")
  
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public LicenseInformation productName(String productName) {
    this.productName = productName;
    return this;
  }

  /**
   * Official MetaDefender base product name licensed.
   * @return productName
   **/
  @JsonProperty("product_name")
  @ApiModelProperty(value = "Official MetaDefender base product name licensed.")
  
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseInformation licenseInformation = (LicenseInformation) o;
    return Objects.equals(this.daysLeft, licenseInformation.daysLeft) &&
        Objects.equals(this.deployment, licenseInformation.deployment) &&
        Objects.equals(this.expiration, licenseInformation.expiration) &&
        Objects.equals(this.licensedEngines, licenseInformation.licensedEngines) &&
        Objects.equals(this.maxNodeCount, licenseInformation.maxNodeCount) &&
        Objects.equals(this.onlineActivated, licenseInformation.onlineActivated) &&
        Objects.equals(this.productId, licenseInformation.productId) &&
        Objects.equals(this.productName, licenseInformation.productName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(daysLeft, deployment, expiration, licensedEngines, maxNodeCount, onlineActivated, productId, productName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseInformation {\n");
    
    sb.append("    daysLeft: ").append(toIndentedString(daysLeft)).append("\n");
    sb.append("    deployment: ").append(toIndentedString(deployment)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    licensedEngines: ").append(toIndentedString(licensedEngines)).append("\n");
    sb.append("    maxNodeCount: ").append(toIndentedString(maxNodeCount)).append("\n");
    sb.append("    onlineActivated: ").append(toIndentedString(onlineActivated)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

