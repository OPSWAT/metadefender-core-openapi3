/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DeepCDRDetails;

/**
 * Contains information about result of sanitization process and any action done after finalizing the process using Post Actions.
 */
@ApiModel(description = "Contains information about result of sanitization process and any action done after finalizing the process using Post Actions.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-15T23:48:50.618888Z[UTC]")
public class AnalysisResultProcessInfoPostProcessing {
  public static final String SERIALIZED_NAME_ACTIONS_FAILED = "actions_failed";
  @SerializedName(SERIALIZED_NAME_ACTIONS_FAILED)
  private String actionsFailed;

  public static final String SERIALIZED_NAME_ACTIONS_RAN = "actions_ran";
  @SerializedName(SERIALIZED_NAME_ACTIONS_RAN)
  private String actionsRan;

  public static final String SERIALIZED_NAME_CONVERTED_DESTINATION = "converted_destination";
  @SerializedName(SERIALIZED_NAME_CONVERTED_DESTINATION)
  private String convertedDestination;

  public static final String SERIALIZED_NAME_CONVERTED_TO = "converted_to";
  @SerializedName(SERIALIZED_NAME_CONVERTED_TO)
  private String convertedTo;

  public static final String SERIALIZED_NAME_COPY_MOVE_DESTINATION = "copy_move_destination";
  @SerializedName(SERIALIZED_NAME_COPY_MOVE_DESTINATION)
  private String copyMoveDestination;

  public static final String SERIALIZED_NAME_SANITIZATION_DETAILS = "sanitization_details";
  @SerializedName(SERIALIZED_NAME_SANITIZATION_DETAILS)
  private DeepCDRDetails sanitizationDetails = null;


  public AnalysisResultProcessInfoPostProcessing actionsFailed(String actionsFailed) {
    
    this.actionsFailed = actionsFailed;
    return this;
  }

   /**
   * Empty string if no action failed or list of failed actions, separated by \&quot;|\&quot;.
   * @return actionsFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sanitization Failed | PAscript failed", value = "Empty string if no action failed or list of failed actions, separated by \"|\".")

  public String getActionsFailed() {
    return actionsFailed;
  }


  public void setActionsFailed(String actionsFailed) {
    this.actionsFailed = actionsFailed;
  }


  public AnalysisResultProcessInfoPostProcessing actionsRan(String actionsRan) {
    
    this.actionsRan = actionsRan;
    return this;
  }

   /**
   * List of successful actions, separated by \&quot;|\&quot;. Empty string if otherwise.
   * @return actionsRan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sanitized | PAscript", value = "List of successful actions, separated by \"|\". Empty string if otherwise.")

  public String getActionsRan() {
    return actionsRan;
  }


  public void setActionsRan(String actionsRan) {
    this.actionsRan = actionsRan;
  }


  public AnalysisResultProcessInfoPostProcessing convertedDestination(String convertedDestination) {
    
    this.convertedDestination = convertedDestination;
    return this;
  }

   /**
   * Contains the name of the sanitized file.
   * @return convertedDestination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OPSWAT_Proactive_DLP_CCN_sanitized.pdf", value = "Contains the name of the sanitized file.")

  public String getConvertedDestination() {
    return convertedDestination;
  }


  public void setConvertedDestination(String convertedDestination) {
    this.convertedDestination = convertedDestination;
  }


  public AnalysisResultProcessInfoPostProcessing convertedTo(String convertedTo) {
    
    this.convertedTo = convertedTo;
    return this;
  }

   /**
   * Contains target type name of sanitization.
   * @return convertedTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "Contains target type name of sanitization.")

  public String getConvertedTo() {
    return convertedTo;
  }


  public void setConvertedTo(String convertedTo) {
    this.convertedTo = convertedTo;
  }


  public AnalysisResultProcessInfoPostProcessing copyMoveDestination(String copyMoveDestination) {
    
    this.copyMoveDestination = copyMoveDestination;
    return this;
  }

   /**
   * Contains target type name of sanitization.
   * @return copyMoveDestination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "Contains target type name of sanitization.")

  public String getCopyMoveDestination() {
    return copyMoveDestination;
  }


  public void setCopyMoveDestination(String copyMoveDestination) {
    this.copyMoveDestination = copyMoveDestination;
  }


  public AnalysisResultProcessInfoPostProcessing sanitizationDetails(DeepCDRDetails sanitizationDetails) {
    
    this.sanitizationDetails = sanitizationDetails;
    return this;
  }

   /**
   * Contains target type name of sanitization.
   * @return sanitizationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains target type name of sanitization.")

  public DeepCDRDetails getSanitizationDetails() {
    return sanitizationDetails;
  }


  public void setSanitizationDetails(DeepCDRDetails sanitizationDetails) {
    this.sanitizationDetails = sanitizationDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalysisResultProcessInfoPostProcessing analysisResultProcessInfoPostProcessing = (AnalysisResultProcessInfoPostProcessing) o;
    return Objects.equals(this.actionsFailed, analysisResultProcessInfoPostProcessing.actionsFailed) &&
        Objects.equals(this.actionsRan, analysisResultProcessInfoPostProcessing.actionsRan) &&
        Objects.equals(this.convertedDestination, analysisResultProcessInfoPostProcessing.convertedDestination) &&
        Objects.equals(this.convertedTo, analysisResultProcessInfoPostProcessing.convertedTo) &&
        Objects.equals(this.copyMoveDestination, analysisResultProcessInfoPostProcessing.copyMoveDestination) &&
        Objects.equals(this.sanitizationDetails, analysisResultProcessInfoPostProcessing.sanitizationDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionsFailed, actionsRan, convertedDestination, convertedTo, copyMoveDestination, sanitizationDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalysisResultProcessInfoPostProcessing {\n");
    sb.append("    actionsFailed: ").append(toIndentedString(actionsFailed)).append("\n");
    sb.append("    actionsRan: ").append(toIndentedString(actionsRan)).append("\n");
    sb.append("    convertedDestination: ").append(toIndentedString(convertedDestination)).append("\n");
    sb.append("    convertedTo: ").append(toIndentedString(convertedTo)).append("\n");
    sb.append("    copyMoveDestination: ").append(toIndentedString(copyMoveDestination)).append("\n");
    sb.append("    sanitizationDetails: ").append(toIndentedString(sanitizationDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

