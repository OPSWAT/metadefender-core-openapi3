/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.RolePermissionObject;

/**
 * A list of rights for each permission
 */
@ApiModel(description = "A list of rights for each permission")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-15T23:48:50.618888Z[UTC]")
public class NewUserRoleRequestRights {
  public static final String SERIALIZED_NAME_AGENTS = "agents";
  @SerializedName(SERIALIZED_NAME_AGENTS)
  private RolePermissionObject agents = null;

  public static final String SERIALIZED_NAME_CERT = "cert";
  @SerializedName(SERIALIZED_NAME_CERT)
  private RolePermissionObject cert = null;

  public static final String SERIALIZED_NAME_CONFIGLOG = "configlog";
  @SerializedName(SERIALIZED_NAME_CONFIGLOG)
  private RolePermissionObject configlog = null;

  public static final String SERIALIZED_NAME_ENGINES = "engines";
  @SerializedName(SERIALIZED_NAME_ENGINES)
  private RolePermissionObject engines = null;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  private RolePermissionObject external = null;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private RolePermissionObject license = null;

  public static final String SERIALIZED_NAME_QUARANTINE = "quarantine";
  @SerializedName(SERIALIZED_NAME_QUARANTINE)
  private RolePermissionObject quarantine = null;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private RolePermissionObject retention = null;

  public static final String SERIALIZED_NAME_RULE = "rule";
  @SerializedName(SERIALIZED_NAME_RULE)
  private RolePermissionObject rule = null;

  public static final String SERIALIZED_NAME_SCAN = "scan";
  @SerializedName(SERIALIZED_NAME_SCAN)
  private RolePermissionObject scan = null;

  public static final String SERIALIZED_NAME_SCANLOG = "scanlog";
  @SerializedName(SERIALIZED_NAME_SCANLOG)
  private RolePermissionObject scanlog = null;

  public static final String SERIALIZED_NAME_SKIP = "skip";
  @SerializedName(SERIALIZED_NAME_SKIP)
  private RolePermissionObject skip = null;

  public static final String SERIALIZED_NAME_UPDATE = "update";
  @SerializedName(SERIALIZED_NAME_UPDATE)
  private RolePermissionObject update = null;

  public static final String SERIALIZED_NAME_UPDATELOG = "updatelog";
  @SerializedName(SERIALIZED_NAME_UPDATELOG)
  private RolePermissionObject updatelog = null;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private RolePermissionObject users = null;

  public static final String SERIALIZED_NAME_WORKFLOW = "workflow";
  @SerializedName(SERIALIZED_NAME_WORKFLOW)
  private RolePermissionObject workflow = null;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @SerializedName(SERIALIZED_NAME_ZONE)
  private RolePermissionObject zone = null;


  public NewUserRoleRequestRights agents(RolePermissionObject agents) {
    
    this.agents = agents;
    return this;
  }

   /**
   * What permissions are allowed for Node.
   * @return agents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for Node.")

  public RolePermissionObject getAgents() {
    return agents;
  }


  public void setAgents(RolePermissionObject agents) {
    this.agents = agents;
  }


  public NewUserRoleRequestRights cert(RolePermissionObject cert) {
    
    this.cert = cert;
    return this;
  }

   /**
   * What permissions are allowed for Certificates.
   * @return cert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for Certificates.")

  public RolePermissionObject getCert() {
    return cert;
  }


  public void setCert(RolePermissionObject cert) {
    this.cert = cert;
  }


  public NewUserRoleRequestRights configlog(RolePermissionObject configlog) {
    
    this.configlog = configlog;
    return this;
  }

   /**
   * What permissions are allowed for Configuration logs.
   * @return configlog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for Configuration logs.")

  public RolePermissionObject getConfiglog() {
    return configlog;
  }


  public void setConfiglog(RolePermissionObject configlog) {
    this.configlog = configlog;
  }


  public NewUserRoleRequestRights engines(RolePermissionObject engines) {
    
    this.engines = engines;
    return this;
  }

   /**
   * What permissions are allowed for Engines and Modules.
   * @return engines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for Engines and Modules.")

  public RolePermissionObject getEngines() {
    return engines;
  }


  public void setEngines(RolePermissionObject engines) {
    this.engines = engines;
  }


  public NewUserRoleRequestRights external(RolePermissionObject external) {
    
    this.external = external;
    return this;
  }

   /**
   * What permissions are allowed for External actions (External Scanner/Post Actions).
   * @return external
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for External actions (External Scanner/Post Actions).")

  public RolePermissionObject getExternal() {
    return external;
  }


  public void setExternal(RolePermissionObject external) {
    this.external = external;
  }


  public NewUserRoleRequestRights license(RolePermissionObject license) {
    
    this.license = license;
    return this;
  }

   /**
   * What permissions are allowed for managing the License.
   * @return license
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the License.")

  public RolePermissionObject getLicense() {
    return license;
  }


  public void setLicense(RolePermissionObject license) {
    this.license = license;
  }


  public NewUserRoleRequestRights quarantine(RolePermissionObject quarantine) {
    
    this.quarantine = quarantine;
    return this;
  }

   /**
   * What permissions are allowed for managing the Quarantine.
   * @return quarantine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the Quarantine.")

  public RolePermissionObject getQuarantine() {
    return quarantine;
  }


  public void setQuarantine(RolePermissionObject quarantine) {
    this.quarantine = quarantine;
  }


  public NewUserRoleRequestRights retention(RolePermissionObject retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * What permissions are allowed for managing the retention policies.
   * @return retention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the retention policies.")

  public RolePermissionObject getRetention() {
    return retention;
  }


  public void setRetention(RolePermissionObject retention) {
    this.retention = retention;
  }


  public NewUserRoleRequestRights rule(RolePermissionObject rule) {
    
    this.rule = rule;
    return this;
  }

   /**
   * What permissions are allowed for managing the workflow rules.
   * @return rule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the workflow rules.")

  public RolePermissionObject getRule() {
    return rule;
  }


  public void setRule(RolePermissionObject rule) {
    this.rule = rule;
  }


  public NewUserRoleRequestRights scan(RolePermissionObject scan) {
    
    this.scan = scan;
    return this;
  }

   /**
   * What permissions are allowed for managing analysis actions.
   * @return scan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing analysis actions.")

  public RolePermissionObject getScan() {
    return scan;
  }


  public void setScan(RolePermissionObject scan) {
    this.scan = scan;
  }


  public NewUserRoleRequestRights scanlog(RolePermissionObject scanlog) {
    
    this.scanlog = scanlog;
    return this;
  }

   /**
   * What permissions are allowed for managing the analysis logs.
   * @return scanlog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the analysis logs.")

  public RolePermissionObject getScanlog() {
    return scanlog;
  }


  public void setScanlog(RolePermissionObject scanlog) {
    this.scanlog = scanlog;
  }


  public NewUserRoleRequestRights skip(RolePermissionObject skip) {
    
    this.skip = skip;
    return this;
  }

   /**
   * What permissions are allowed for managing the Whitelist/blacklist defined in the Inventory.
   * @return skip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the Whitelist/blacklist defined in the Inventory.")

  public RolePermissionObject getSkip() {
    return skip;
  }


  public void setSkip(RolePermissionObject skip) {
    this.skip = skip;
  }


  public NewUserRoleRequestRights update(RolePermissionObject update) {
    
    this.update = update;
    return this;
  }

   /**
   * What permissions are allowed for managing the update configuration.
   * @return update
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the update configuration.")

  public RolePermissionObject getUpdate() {
    return update;
  }


  public void setUpdate(RolePermissionObject update) {
    this.update = update;
  }


  public NewUserRoleRequestRights updatelog(RolePermissionObject updatelog) {
    
    this.updatelog = updatelog;
    return this;
  }

   /**
   * What permissions are allowed for managing the update logs.
   * @return updatelog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the update logs.")

  public RolePermissionObject getUpdatelog() {
    return updatelog;
  }


  public void setUpdatelog(RolePermissionObject updatelog) {
    this.updatelog = updatelog;
  }


  public NewUserRoleRequestRights users(RolePermissionObject users) {
    
    this.users = users;
    return this;
  }

   /**
   * What permissions are allowed for managing the users.
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the users.")

  public RolePermissionObject getUsers() {
    return users;
  }


  public void setUsers(RolePermissionObject users) {
    this.users = users;
  }


  public NewUserRoleRequestRights workflow(RolePermissionObject workflow) {
    
    this.workflow = workflow;
    return this;
  }

   /**
   * What permissions are allowed for managing the workflow templates.
   * @return workflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the workflow templates.")

  public RolePermissionObject getWorkflow() {
    return workflow;
  }


  public void setWorkflow(RolePermissionObject workflow) {
    this.workflow = workflow;
  }


  public NewUserRoleRequestRights zone(RolePermissionObject zone) {
    
    this.zone = zone;
    return this;
  }

   /**
   * What permissions are allowed for managing the network zones.
   * @return zone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What permissions are allowed for managing the network zones.")

  public RolePermissionObject getZone() {
    return zone;
  }


  public void setZone(RolePermissionObject zone) {
    this.zone = zone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewUserRoleRequestRights newUserRoleRequestRights = (NewUserRoleRequestRights) o;
    return Objects.equals(this.agents, newUserRoleRequestRights.agents) &&
        Objects.equals(this.cert, newUserRoleRequestRights.cert) &&
        Objects.equals(this.configlog, newUserRoleRequestRights.configlog) &&
        Objects.equals(this.engines, newUserRoleRequestRights.engines) &&
        Objects.equals(this.external, newUserRoleRequestRights.external) &&
        Objects.equals(this.license, newUserRoleRequestRights.license) &&
        Objects.equals(this.quarantine, newUserRoleRequestRights.quarantine) &&
        Objects.equals(this.retention, newUserRoleRequestRights.retention) &&
        Objects.equals(this.rule, newUserRoleRequestRights.rule) &&
        Objects.equals(this.scan, newUserRoleRequestRights.scan) &&
        Objects.equals(this.scanlog, newUserRoleRequestRights.scanlog) &&
        Objects.equals(this.skip, newUserRoleRequestRights.skip) &&
        Objects.equals(this.update, newUserRoleRequestRights.update) &&
        Objects.equals(this.updatelog, newUserRoleRequestRights.updatelog) &&
        Objects.equals(this.users, newUserRoleRequestRights.users) &&
        Objects.equals(this.workflow, newUserRoleRequestRights.workflow) &&
        Objects.equals(this.zone, newUserRoleRequestRights.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agents, cert, configlog, engines, external, license, quarantine, retention, rule, scan, scanlog, skip, update, updatelog, users, workflow, zone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewUserRoleRequestRights {\n");
    sb.append("    agents: ").append(toIndentedString(agents)).append("\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    configlog: ").append(toIndentedString(configlog)).append("\n");
    sb.append("    engines: ").append(toIndentedString(engines)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    quarantine: ").append(toIndentedString(quarantine)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    scan: ").append(toIndentedString(scan)).append("\n");
    sb.append("    scanlog: ").append(toIndentedString(scanlog)).append("\n");
    sb.append("    skip: ").append(toIndentedString(skip)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    updatelog: ").append(toIndentedString(updatelog)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

