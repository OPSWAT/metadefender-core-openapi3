/*
 * MetaDefender Core
 * ## Developer Guide This is the API documentation for *MetaDefender Core Public API*.  If you would like to evaluate or have any questions about this documentation, please contact us via our [Contact Us](https://opswat.com/contact) form.  ## How to Interact with MetaDefender Core using REST Beginning with MetaDefender Core 4.x, OPSWAT recommends using the JSON-based REST API. The available methods are documented below. > _**Note**:_ MetaDefender API doesn't support chunk upload, however is recommended to stream the files to MetaDefender as part of the upload process.  --- ## File Analysis Process    MetaDefender's main functionality is to analyze large volumes with a high throughput. Depending on the configuration and licensed technologies, the analysis times can vary.    Below is a brief description of the API integration flow:    1. Upload a file for analysis (`POST /file`), which returns the `data_id`: [File Analysis](#operation/fileAnalysisPost)).           > _**Note**:_ The performance depends on:           > - number of nodes (scaling)     > - number of engines per node     > - type of file to be scanned     > - Metadefender Core and nodes' hardware       2. You have 2 ways to retrieve the analysis report:      - **Polling**: Fetch the result with previously received data_id (`GET /file/{data_id}` resource) until scan result belonging to data_id doesn't reach the 100 percent progress_percentage: ( [Fetch processing result](#operation/userLogin))        > _**Note**:_ Too many data_id requests can reduce performance. It is enough to just check every few hundred milliseconds.          - **Callbackurl**: Specify a callbackurl that will be called once the analysis is complete.     3. Retrieve the analysis results anytime after the analysis is completed with hash for files (md5, sha1, sha256) by calling [Fetch processing result](#operation/userLogin).      - The hash can be found in the scan results    4. Retrieve processed file (sanitized, redacted, watermarked, etc.) after the analysis is complete.      > _**Note**:_ Based on the configured retention policy, the files might be available for retrieval at a later time.   --- OPSWAT provides some sample codes on [GitHub](https://github.com/OPSWAT) to make it easier to understand how the MetaDefender REST API works. 
 *
 * The version of the OpenAPI document: v4.18.0
 * Contact: feedback@opswat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Scan report per each engine.
 */
@ApiModel(description = "Scan report per each engine.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-15T23:48:50.618888Z[UTC]")
public class AVEngineScanReport {
  public static final String SERIALIZED_NAME_DEF_TIME = "def_time";
  @SerializedName(SERIALIZED_NAME_DEF_TIME)
  private String defTime;

  public static final String SERIALIZED_NAME_ENG_ID = "eng_id";
  @SerializedName(SERIALIZED_NAME_ENG_ID)
  private String engId;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_SCAN_RESULT_I = "scan_result_i";
  @SerializedName(SERIALIZED_NAME_SCAN_RESULT_I)
  private Integer scanResultI;

  public static final String SERIALIZED_NAME_SCAN_TIME = "scan_time";
  @SerializedName(SERIALIZED_NAME_SCAN_TIME)
  private Integer scanTime;

  public static final String SERIALIZED_NAME_THREAT_FOUND = "threat_found";
  @SerializedName(SERIALIZED_NAME_THREAT_FOUND)
  private String threatFound;

  public static final String SERIALIZED_NAME_WAIT_TIME = "wait_time";
  @SerializedName(SERIALIZED_NAME_WAIT_TIME)
  private Integer waitTime;


  public AVEngineScanReport defTime(String defTime) {
    
    this.defTime = defTime;
    return this;
  }

   /**
   * The database definition time for this engine
   * @return defTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-03-11T11:08:00.000Z", value = "The database definition time for this engine")

  public String getDefTime() {
    return defTime;
  }


  public void setDefTime(String defTime) {
    this.defTime = defTime;
  }


  public AVEngineScanReport engId(String engId) {
    
    this.engId = engId;
    return this;
  }

   /**
   * The  unique identification string for the engine
   * @return engId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "clamav_1_windows", value = "The  unique identification string for the engine")

  public String getEngId() {
    return engId;
  }


  public void setEngId(String engId) {
    this.engId = engId;
  }


  public AVEngineScanReport location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Where this engine is deployed (local/remote).
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "local", value = "Where this engine is deployed (local/remote).")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public AVEngineScanReport scanResultI(Integer scanResultI) {
    
    this.scanResultI = scanResultI;
    return this;
  }

   /**
   * Scan result as index in the Processing Results table
   * @return scanResultI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Scan result as index in the Processing Results table")

  public Integer getScanResultI() {
    return scanResultI;
  }


  public void setScanResultI(Integer scanResultI) {
    this.scanResultI = scanResultI;
  }


  public AVEngineScanReport scanTime(Integer scanTime) {
    
    this.scanTime = scanTime;
    return this;
  }

   /**
   * The time elapsed during scan with this engine (in milliseconds).
   * @return scanTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "336", value = "The time elapsed during scan with this engine (in milliseconds).")

  public Integer getScanTime() {
    return scanTime;
  }


  public void setScanTime(Integer scanTime) {
    this.scanTime = scanTime;
  }


  public AVEngineScanReport threatFound(String threatFound) {
    
    this.threatFound = threatFound;
    return this;
  }

   /**
   * The threat name, IF scan result is Infected or Suspicious. Otherwise empty string or error message from the engine.
   * @return threatFound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "The threat name, IF scan result is Infected or Suspicious. Otherwise empty string or error message from the engine.")

  public String getThreatFound() {
    return threatFound;
  }


  public void setThreatFound(String threatFound) {
    this.threatFound = threatFound;
  }


  public AVEngineScanReport waitTime(Integer waitTime) {
    
    this.waitTime = waitTime;
    return this;
  }

   /**
   * Time elapsed between sending file to node and receiving the result from the engine (in milliseconds).
   * @return waitTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Time elapsed between sending file to node and receiving the result from the engine (in milliseconds).")

  public Integer getWaitTime() {
    return waitTime;
  }


  public void setWaitTime(Integer waitTime) {
    this.waitTime = waitTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AVEngineScanReport avEngineScanReport = (AVEngineScanReport) o;
    return Objects.equals(this.defTime, avEngineScanReport.defTime) &&
        Objects.equals(this.engId, avEngineScanReport.engId) &&
        Objects.equals(this.location, avEngineScanReport.location) &&
        Objects.equals(this.scanResultI, avEngineScanReport.scanResultI) &&
        Objects.equals(this.scanTime, avEngineScanReport.scanTime) &&
        Objects.equals(this.threatFound, avEngineScanReport.threatFound) &&
        Objects.equals(this.waitTime, avEngineScanReport.waitTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defTime, engId, location, scanResultI, scanTime, threatFound, waitTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AVEngineScanReport {\n");
    sb.append("    defTime: ").append(toIndentedString(defTime)).append("\n");
    sb.append("    engId: ").append(toIndentedString(engId)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    scanResultI: ").append(toIndentedString(scanResultI)).append("\n");
    sb.append("    scanTime: ").append(toIndentedString(scanTime)).append("\n");
    sb.append("    threatFound: ").append(toIndentedString(threatFound)).append("\n");
    sb.append("    waitTime: ").append(toIndentedString(waitTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

